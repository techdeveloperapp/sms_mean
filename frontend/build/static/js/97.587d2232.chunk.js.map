{"version":3,"sources":["AdminComponents/Profile/academicsReports/AcademicTranscripts.js","components/tables/ExcelExport.js"],"names":["AcademicTranscripts","years","useSelector","selectYearGroup","current","selectacademicYear","from","setfrom","useState","currentTerm","to","setto","currentYear","studentID","setstudentID","loading","setloading","show","setshow","school","setschool","data","setdata","error","seterror","studentDetails","setstudentDetails","useEffect","axios","get","then","res","getTotal","exams","work","Number","getGrade","classwork","exam","num","getInterpretation","_jsxs","children","_jsx","action","className","name","value","onChange","e","target","id","defaultValue","hidden","length","map","year","_id","disabled","onClick","preventDefault","errorAlert","concat","async","student","console","log","docs","type","role","fullName","motto","userID","_Fragment","surname","scope","course","classWorkPercentage","examPercentage","position","colSpan","handlePrint","window","print","Excel","columns","btn","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExcelExport","_ref","element","col","label"],"mappings":"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","file":"static/js/97.587d2232.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert } from \"../../../utils\";\nimport Excel from \"../../../components/tables/ExcelExport\";\nimport {\n  selectYearGroup,\n  selectacademicYear,\n} from \"../../../store/slices/schoolSlice\";\n\nfunction AcademicTranscripts() {\n  const years = useSelector(selectYearGroup);\n  const current = useSelector(selectacademicYear);\n  const [from, setfrom] = useState(current.currentTerm);\n  const [to, setto] = useState(current.currentYear);\n  const [studentID, setstudentID] = useState(\"\");\n  const [loading, setloading] = useState(\"\");\n  const [show, setshow] = useState(false);\n  const [school, setschool] = useState({});\n  const [data, setdata] = useState([]);\n  const [error, seterror] = useState(false);\n\n  const [studentDetails, setstudentDetails] = useState({});\n\n  useEffect(() => {\n    axios.get(\"/school\").then((res) => {\n      setschool(res.data);\n    });\n  }, []);\n\n  const handleSearch = (e) => {\n    seterror(false);\n    e.preventDefault();\n    if (!studentID) {\n      return errorAlert(\"select student\");\n    }\n    setloading(true);\n    axios.get(`sba/student/${studentID}/${to}/${from}`).then(async (res) => {\n      let student = await axios.get(`/students/student/${studentID}`);\n      console.log(student);\n      setloading(false);\n      setshow(true);\n      if (student.data.error) {\n        return seterror(true);\n      }\n      setstudentDetails(student.data.student);\n      setloading(false);\n\n      if (res.data.error) {\n        return errorAlert(\"Student does not exist\");\n      }\n      setdata(res.data.docs);\n    });\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const columns = [\n    { id: \"subject\", name: \"Subject\" },\n    { id: \"term\", name: \"Term\" },\n    { id: \"mark\", name: \"Mark\" },\n  ];\n\n  const getTotal = (exams, work) => {\n    if (!work && !exams) {\n      return \"-\";\n    }\n    return Number(exams || 0) + Number(work || 0);\n  };\n\n  const getGrade = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    if (num >= 75 && num <= 100) {\n      return \"A1\";\n    } else if (num >= 70 && num <= 74) {\n      return \"B2\";\n    } else if (num >= 65 && num <= 69) {\n      return \"B3\";\n    } else if (num >= 60 && num <= 64) {\n      return \"C4\";\n    } else if (num >= 55 && num <= 59) {\n      return \"C5\";\n    } else if (num >= 50 && num <= 54) {\n      return \"C6\";\n    } else if (num >= 45 && num <= 49) {\n      return \"D7\";\n    } else if (num >= 40 && num <= 44) {\n      return \"E8\";\n    } else if (num >= 0 && num <= 39) {\n      return \"F9\";\n    } else {\n      return null;\n    }\n  };\n\n  const getInterpretation = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    num = Number(num);\n    if (num > 75 && num <= 100) {\n      return \"Excellent\";\n    } else if (num >= 70 && num <= 74) {\n      return \"Vert good\";\n    } else if (num >= 65 && num <= 69) {\n      return \"Good\";\n    } else if (num >= 60 && num <= 64) {\n      return \"Credit\";\n    } else if (num >= 55 && num <= 59) {\n      return \"Credit\";\n    } else if (num >= 50 && num <= 54) {\n      return \"Credit\";\n    } else if (num >= 45 && num <= 49) {\n      return \"Pass\";\n    } else if (num >= 40 && num <= 44) {\n      return \"Pass\";\n    } else if (num >= 0 && num <= 39) {\n      return \"Failure\";\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <div>\n      <h3>Academic Transcript</h3>\n      <form action=\"\" className=\"row content__container\">\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Term</label>\n          <select\n            name=\"type\"\n            value={from}\n            onChange={(e) => setfrom(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            <option value=\"1\">1st</option>\n            <option value=\"2\">2rd</option>\n            <option value=\"3\">3rd</option>\n          </select>\n        </div>\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Year</label>\n          <select\n            name=\"type\"\n            value={to}\n            onChange={(e) => setto(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {years.length > 0 ? (\n              years.map((e) => (\n                <option key={e._id} value={e.year}>\n                  {e.year}\n                </option>\n              ))\n            ) : (\n              <option disabled>No data yet</option>\n            )}\n          </select>\n        </div>\n        <div className=\"mb-3 col-sm-4\">\n          <label className=\"form-label\">Student ID</label>\n          <input\n            value={studentID}\n            onChange={(e) => setstudentID(e.target.value)}\n            className=\"form-control\"\n          ></input>\n        </div>\n        <div className=\"mb-3\">\n          <button\n            onClick={handleSearch}\n            disabled={loading}\n            type=\"submit\"\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Search\n          </button>\n        </div>\n      </form>\n\n      {show && (\n        <div className=\"content__container mt-4\" id=\"section-to-print\">\n          <div className=\"text-center\">\n            <h5>\n              <strong>{school?.fullName}</strong>\n            </h5>\n            <h6>{school?.motto}</h6>\n            <h5 className=\"my-4\">\n              STUDENT TRANSCRIPT FOR {studentDetails?.userID}\n            </h5>\n          </div>\n          {error ? (\n            <div>\n              {\" \"}\n              <h3 className=\"text-center text-danger\">Student Not found</h3>\n            </div>\n          ) : (\n            <>\n              <div className=\"text-center\">\n                <h6>\n                  {studentDetails?.name} {studentDetails?.surname}\n                </h6>\n                <div>\n                  Term {from} - Year {to}\n                </div>\n              </div>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Subject</th>\n                    <th scope=\"col\">Course Work</th>\n                    <th scope=\"col\">Exam</th>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Grade</th>\n                    <th scope=\"col\">Interpretation</th>\n                    <th scope=\"col\">Position</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.length > 0 ? (\n                    data.map((e) => (\n                      <tr>\n                        <th scope=\"row\">{e?.course}</th>\n                        <td>{e.classWorkPercentage || \"-\"}</td>\n                        <td>{e?.examPercentage || \"-\"}</td>\n                        <td>\n                          {getTotal(e?.examPercentage, e.classWorkPercentage)}\n                        </td>\n                        <td>\n                          {getGrade(e?.examPercentage, e.classWorkPercentage)}\n                        </td>\n                        <td>\n                          {getInterpretation(\n                            e?.examPercentage,\n                            e.classWorkPercentage\n                          )}\n                        </td>\n                        <td>{e.position || \"-\"}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={3} className=\"text-center\">\n                        No Data\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n              <div className=\"my-3 text-center\">\n                <button onClick={handlePrint} className=\"btn blue__btn mr-2\">\n                  Print\n                </button>\n                <Excel data={data} columns={columns} btn=\"save\" />\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AcademicTranscripts;\n","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport moment from \"moment\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction ExcelExport({ data, btn, name, columns }) {\n  return (\n    <ExcelFile\n      element={<button className=\"btn blue__btn\">{btn || \"Download\"}</button>}\n    >\n      <ExcelSheet data={data} name={name || \"data\"}>\n        {columns.map((col) => (\n          <ExcelColumn key={col.id} label={col.name} value={col.id} />\n        ))}\n      </ExcelSheet>\n    </ExcelFile>\n  );\n}\n\nexport default ExcelExport;\n"],"sourceRoot":""}