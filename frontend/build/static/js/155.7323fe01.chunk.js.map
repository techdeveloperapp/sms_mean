{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","TeachersComponents/academics/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","_ref","rows","handleEdit","examMark","classWorkPercentage","examPercentage","setexamMark","classworkMark","setclassworkMark","handleOpenPercentage","classes","getGrade","classwork","exam","num","getTotal","getInterpretation","Number","getClassWorkPercentage","mark","per","work","dec","toFixed","getexamPercentage","exams","decclass","decexam","_jsxs","children","_jsx","className","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","colSpan","name","type","onChange","e","target","value","onClick","Edit","TableBody","length","_Fragment","map","row","userID","readOnly","classWork","total","position","EditIcon","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","open","setOpen","setexam","setclassWork","onSubmit","classID","loading","setposition","register","handleSubmit","errors","useForm","handleClose","Dialog","fullScreen","onClose","TransitionComponent","AppBar","color","Toolbar","Typography","variant","IconButton","edge","CloseIcon","action","min","max","a1","disabled","class","role","SBA","students","setstudents","useState","openEdit","setopenEdit","data","setdata","currentYear","useSelector","selectacademicYear","selectedUser","setselectedUser","id","useParams","loadingSubmit","setloadingSubmit","error","seterror","useEffect","axios","get","concat","then","res","_res$data$docs","_res$data$docs2","docs","sba","errorAlert","currentTerm","result","_result$data$docs","_result$data$docs2","_result$data$docs3","selectedStudent","find","async","put","_id","_res$data$doc","doc"],"mappings":"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","file":"static/js/155.7323fe01.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/BorderColor\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  examMark,\n  classWorkPercentage,\n  examPercentage,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n  handleOpenPercentage,\n}) {\n  const classes = useStyles();\n  const getGrade = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    if (num >= 75 && num <= 100) {\n      return \"A1\";\n    } else if (num >= 70 && num <= 74) {\n      return \"B2\";\n    } else if (num >= 65 && num <= 69) {\n      return \"B3\";\n    } else if (num >= 60 && num <= 64) {\n      return \"C4\";\n    } else if (num >= 55 && num <= 59) {\n      return \"C5\";\n    } else if (num >= 50 && num <= 54) {\n      return \"C6\";\n    } else if (num >= 45 && num <= 49) {\n      return \"D7\";\n    } else if (num >= 40 && num <= 44) {\n      return \"E8\";\n    } else if (num >= 0 && num <= 39) {\n      return \"F9\";\n    } else {\n      return null;\n    }\n  };\n\n  const getInterpretation = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    num = Number(num);\n    if (num > 75 && num <= 100) {\n      return \"Excellent\";\n    } else if (num >= 70 && num <= 74) {\n      return \"Vert good\";\n    } else if (num >= 65 && num <= 69) {\n      return \"Good\";\n    } else if (num >= 60 && num <= 64) {\n      return \"Credit\";\n    } else if (num >= 55 && num <= 59) {\n      return \"Credit\";\n    } else if (num >= 50 && num <= 54) {\n      return \"Credit\";\n    } else if (num >= 45 && num <= 49) {\n      return \"Pass\";\n    } else if (num >= 40 && num <= 44) {\n      return \"Pass\";\n    } else if (num >= 0 && num <= 39) {\n      return \"Failure\";\n    } else {\n      return null;\n    }\n  };\n\n  const getClassWorkPercentage = (mark, per, work) => {\n    if (mark && per && work) {\n      let dec = (Number(mark) / Number(work)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = (mark, per, exam) => {\n    if (mark && per && exam) {\n      let dec = (Number(mark) / Number(exam)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (classwork, exams) => {\n    if (!classwork && !exams) {\n      return \"-\";\n    }\n    let decclass =\n      (Number(classwork) / Number(classworkMark || 0)) *\n      (Number(classWorkPercentage || 0) / 100);\n    let decexam =\n      (Number(exams) / Number(examMark)) * (Number(examPercentage || 0) / 100);\n\n    let total = (Number(decexam + decclass) * 100).toFixed(0);\n    return total;\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work\n                <input\n                  className=\"form-control\"\n                  name=\"classworkMark\"\n                  type=\"number\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                Class Work ({classWorkPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam ({examPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Total 100%</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Grade</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <small>Interpretation</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Position</small>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                <small>Set</small>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getClassWorkPercentage(\n                          row?.classWork,\n                          classWorkPercentage,\n                          classworkMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getexamPercentage(\n                          row?.exam,\n                          examPercentage,\n                          examMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      {/* <small> {getTotal(row?.classWork, row?.exam)}</small> */}\n                      <small> {row?.total}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small> {getGrade(row?.classWork, row?.exam)}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small>\n                        {\" \"}\n                        {getInterpretation(row?.classWork, row?.exam)}\n                      </small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {\" \"}\n                      <small>{row?.position}</small>{\" \"}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn btn-sm\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ( out of {Number(classworkMark || 0)})\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(classworkMark || 0)}\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark (out of {Number(examMark || 0)})\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(examMark || 0)}\n            </span>\n          )}\n        </div>\n        {/* <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div> */}\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Table from \"../../AdminComponents/academics/sba/SbaTable\";\nimport Edit from \"../../AdminComponents/academics/sba/EditModal\";\n\nimport axios from \"../../store/axios\";\nimport { useParams } from \"react-router-dom\";\nimport { errorAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectacademicYear } from \"../../store/slices/schoolSlice\";\n\nfunction SBA() {\n  const [students, setstudents] = useState([]);\n  const [exam, setexam] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [data, setdata] = useState([]);\n  const currentYear = useSelector(selectacademicYear);\n  const [selectedUser, setselectedUser] = useState({});\n  const { id, classID } = useParams();\n  const [position, setposition] = useState(\"\");\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n  const [error, seterror] = useState(false);\n  const [examMark, setexamMark] = useState(\"\");\n  const [classWork, setclassWork] = useState(\"\");\n  const [classworkMark, setclassworkMark] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`/classes/classCode/${classID}`).then((res) => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        seterror(true);\n        return errorAlert(\"SBA not set for this class\");\n      }\n      axios\n        .get(\n          `/sba/${classID}/${id}/${currentYear?.currentYear}/${currentYear?.currentTerm}`\n        )\n        .then((result) => {\n          setdata(result.data.docs);\n          setstudents(result.data.docs?.students);\n          setclassworkMark(result.data.docs?.classWork);\n          setexamMark(result.data.docs?.exam);\n        });\n    });\n  }, [currentYear, id, classID]);\n\n  const handleEdit = (id) => {\n    if (!classworkMark) {\n      return errorAlert(\"Please set  classWork %\");\n    }\n    if (!examMark) {\n      return errorAlert(\"Please set  exam score %\");\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find((e) => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n    await axios.put(`/sba/update/${data?._id}`, {\n      exam: examMark,\n      classWork: classworkMark,\n    });\n    axios\n      .put(`/sba/update/student/${data?._id}/${selectedUser?.userID}`, {\n        classWork,\n        exam,\n        userID: selectedUser?.userID,\n        name: selectedUser?.name,\n        position: position,\n      })\n      .then((res) => {\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(res.data.doc?.students);\n      });\n  };\n\n  return (\n    <div>\n      {error ? (\n        <div>SBA is not set for this class</div>\n      ) : (\n        <>\n          <Table\n            setclassWork={setclassWork}\n            rows={students}\n            handleEdit={handleEdit}\n            examMark={examMark}\n            setexamMark={setexamMark}\n            classworkMark={classworkMark}\n            setclassworkMark={setclassworkMark}\n          />\n          <Edit\n            name={selectedUser?.name}\n            userID={selectedUser?.userID}\n            exam={exam}\n            classworkMark={classworkMark}\n            examMark={examMark}\n            classID={classID}\n            loading={loadingSubmit}\n            setposition={setposition}\n            position={position}\n            setexam={setexam}\n            setclassWork={setclassWork}\n            classWork={classWork}\n            open={openEdit}\n            onSubmit={handleonSubmit}\n            setOpen={setopenEdit}\n          />{\" \"}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}