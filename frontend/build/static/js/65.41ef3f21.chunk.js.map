{"version":3,"sources":["AdminComponents/finance/setfees/FeeForm.js","AdminComponents/finance/setfees/SetNewFees.js"],"names":["FeeForm","_ref","classID","loading","tution","settution","setfacility","facility","maintenance","setmaintenance","exam","setexam","setclass","type","settype","isEdit","onSubmit","classes","useSelector","selectClasses","register","handleSubmit","errors","useForm","_jsx","children","_jsxs","className","action","_Fragment","ref","required","value","onChange","e","target","name","defaultValue","hidden","length","map","option","classCode","disabled","class","currentCurrency","min","onClick","role","SetNewFees","useState","Link","to","obj","results","day","freshDay","freshBorder","border","axios","post","then","async","res","data","error","errorAlert","successAlert","activity","concat","user","catch","err"],"mappings":"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","file":"static/js/65.41ef3f21.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../../store/slices/schoolSlice\";\nimport { currentCurrency } from \"../../../utils\";\n\nfunction FeeForm({\n  classID,\n  loading,\n  tution,\n  settution,\n  setfacility,\n  facility,\n  maintenance,\n  setmaintenance,\n  exam,\n  setexam,\n  setclass,\n  type,\n  settype,\n  isEdit,\n  onSubmit,\n}) {\n  ///const feesType = useSelector(selectFees);\n  const classes = useSelector(selectClasses);\n  const { register, handleSubmit, errors } = useForm();\n\n  return (\n    <div>\n      <form className=\"row content__container\" action=\"\">\n        {!isEdit && (\n          <>\n            <div className=\"col-md-10 mb-3\">\n              <label className=\"form-label\">Select Class</label>\n              <select\n                ref={register({ required: true })}\n                value={classID}\n                onChange={(e) => setclass(e.target.value)}\n                name=\"class\"\n                className=\"form-select\"\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {classes?.length > 0 ? (\n                  classes.map((option) => (\n                    <option key={option.classCode} value={option.classCode}>\n                      {option.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No data yet</option>\n                )}\n              </select>\n              {errors.class && (\n                <span className=\" form-error text-danger mb-2\">\n                  This field is required\n                </span>\n              )}\n            </div>\n            <div className=\"col-md-10 mb-3\">\n              <label className=\"form-label\">Select Type</label>\n              <select\n                value={type}\n                ref={register({ required: true })}\n                onChange={(e) => settype(e.target.value)}\n                name=\"type\"\n                className=\"form-select\"\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                <option value=\"border\">Border</option>\n                <option value=\"freshBorder\">Fresh Boarder</option>\n                <option value=\"day\">Day</option>\n                <option value=\"freshDay\">Fresh Day</option>\n              </select>\n              {errors.type && (\n                <span className=\" form-error text-danger mb-2\">\n                  This field is required\n                </span>\n              )}\n            </div>\n          </>\n        )}\n        <div className=\"col-md-10 mb-3\">\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Tution Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  ref={register({ min: 0 })}\n                  value={tution}\n                  onChange={(e) => settution(e.target.value)}\n                  type=\"number\"\n                  className=\"form-control\"\n                  name=\"tution\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Facility User Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={facility}\n                  onChange={(e) => setfacility(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"facility\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Maintenance Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={maintenance}\n                  onChange={(e) => setmaintenance(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"maintenance\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row mb-2\">\n            <label className=\"col-2 form-label\">Exam Fee</label>\n            <div className=\"col-10\">\n              <div className=\"input-group\">\n                <div className=\"input-group-text\">{currentCurrency()}</div>\n                <input\n                  value={exam}\n                  onChange={(e) => setexam(e.target.value)}\n                  type=\"number\"\n                  ref={register({ min: 0 })}\n                  className=\"form-control\"\n                  name=\"exam\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 md-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {isEdit ? \"Save Changes\" : \"Submit\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default FeeForm;\n","import React, { useState } from \"react\";\nimport FeeForm from \"./FeeForm\";\nimport axios from \"../../../store/axios\";\nimport { Link } from \"react-router-dom\";\nimport { errorAlert, successAlert } from \"../../../utils\";\n\nfunction SetNewFees() {\n  const [classID, setclass] = useState(\"\");\n  const [type, settype] = useState(\"\");\n  const [tution, settution] = useState(\"\");\n  const [facility, setfacility] = useState(\"\");\n  const [maintenance, setmaintenance] = useState(\"\");\n  const [exam, setexam] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (classID && type) {\n      var obj = {};\n      var results = {\n        tution,\n        facility,\n        maintenance,\n        exam,\n      };\n      if (type === \"day\") {\n        obj = {\n          day: results,\n        };\n      } else if (type === \"freshDay\") {\n        obj = {\n          freshDay: results,\n        };\n      } else if (type === \"freshBorder\") {\n        obj = {\n          freshBorder: results,\n        };\n      } else if (type === \"border\") {\n        obj = {\n          border: results,\n        };\n      } else {\n        return 0;\n      }\n      axios\n        .post(\"/fees/add\", { name: classID, ...obj })\n        .then(async (res) => {\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"successfully created\");\n          settution(\"\");\n          setfacility(\"\");\n          setmaintenance(\"\");\n          setclass(\"\");\n          setexam(\"\");\n          settype(\"\");\n          settution(\"\");\n          await axios.post(\"/activitylog/create\", {\n            activity: `fees for class ${classID}  was added`,\n            user: \"admin\",\n          });\n        })\n        .catch((err) => {\n          errorAlert(\"Error\");\n        });\n    } else {\n      errorAlert(\"Fill in all fields\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"d-flex justify-content-end\">\n        <Link className=\"btn blue__btn\" to=\"/finance/fees\">\n          {\" \"}\n          View All Fees\n        </Link>\n      </div>\n      <h3>Set Fees</h3>\n      <FeeForm\n        tution={tution}\n        settution={settution}\n        setfacility={setfacility}\n        facility={facility}\n        maintenance={maintenance}\n        setmaintenance={setmaintenance}\n        exam={exam}\n        setexam={setexam}\n        classID={classID}\n        setclass={setclass}\n        type={type}\n        settype={settype}\n        onSubmit={handleSubmit}\n      />\n    </div>\n  );\n}\n\nexport default SetNewFees;\n"],"sourceRoot":""}