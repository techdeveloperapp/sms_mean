{"version":3,"sources":["pages/reset/Reset.js","utils.js"],"names":["Login","_ref","history","id","useParams","confirmpass","setconfirmpass","useState","password","setpassword","loading","setloading","register","handleSubmit","errors","useForm","_jsx","className","children","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","_jsxs","CForm","CInputGroup","CInputGroupPrepend","CInputGroupText","CIcon","name","value","ref","required","minLength","onChange","e","target","type","placeholder","validate","Link","to","xs","CButton","disabled","onClick","handleSignin","axios","post","token","then","res","data","error","errorAlert","user","handleLogin","push","catch","err","console","log","color","_Fragment","role","successAlert","text","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","getYearsList","length","min","Date","getFullYear","max","yearArray","arr","index","currentCurrency","getYearsPast","getEmailPattern","getID","Math","random","toString","substr","getTrimString","str","getCapitalize","string","charAt","toUpperCase","substring","getIntial","slice","getImgSrc","src","concat","timeStamp","time","_moment2","_moment","_moment3","_moment4","moment","format","subtract","combineDateAndTime","date","year","month","getMonth","day","getDate","separateDateandTime","d","getHours","getMinutes"],"mappings":"iIAAA,gGAsJeA,UAjIDC,IAAkB,IAAjB,QAAEC,GAASD,EACxB,MAAM,GAAEE,GAAOC,eACRC,EAAaC,GAAkBC,mBAAS,KACxCC,EAAUC,GAAeF,mBAAS,KAClCG,EAASC,GAAcJ,oBAAS,IACjC,SAAEK,EAAQ,aAAEC,EAAY,OAAEC,GAAWC,cAwB3C,OACEC,cAAA,OAAKC,UAAU,qDAAoDC,SACjEF,cAACG,IAAU,CAAAD,SACTF,cAACI,IAAI,CAACH,UAAU,yBAAwBC,SACtCF,cAACK,IAAI,CAACC,GAAG,IAAGJ,SACVF,cAACO,IAAU,CAAAL,SACTF,cAACQ,IAAK,CAACP,UAAU,MAAKC,SACpBF,cAACS,IAAS,CAAAP,SACRQ,eAACC,IAAK,CAAAT,SAAA,CACJF,cAAA,MAAAE,SAAI,mBACJF,cAAA,KAAGC,UAAU,aAAYC,SAAC,4BAC1BQ,eAACE,IAAW,CAACX,UAAU,OAAMC,SAAA,CAC3BF,cAACa,IAAkB,CAAAX,SACjBF,cAACc,IAAe,CAAAZ,SACdF,cAACe,IAAK,CAACC,KAAK,iBAGhBhB,cAAA,SACEiB,MAAOzB,EACPS,UAAU,sBACVe,KAAK,WACLE,IAAKtB,EAAS,CAAEuB,UAAU,EAAMC,UAAW,IAC3CC,SAAWC,GAAM7B,EAAY6B,EAAEC,OAAON,OACtCO,KAAK,WACLL,UAAQ,EACRM,YAAY,mBAEdzB,cAAA,YAEDF,EAAON,UACNQ,cAAA,QAAMC,UAAU,+BAA8BC,SAAC,oDAIjDQ,eAACE,IAAW,CAACX,UAAU,OAAMC,SAAA,CAC3BF,cAACa,IAAkB,CAAAX,SACjBF,cAACc,IAAe,CAAAZ,SACdF,cAACe,IAAK,CAACC,KAAK,wBAGhBhB,cAAA,SACEwB,KAAK,WACLvB,UAAU,sBACVwB,YAAY,mBACZT,KAAK,cACLE,IAAKtB,EAAS,CACZuB,UAAU,EACVO,SAAWT,GAAUA,IAAUzB,IAEjCyB,MAAO5B,EACP8B,UAAQ,EACRE,SAAWC,GAAMhC,EAAegC,EAAEC,OAAON,SAE3CjB,cAAA,YAEDF,EAAOT,aACNW,cAAA,QAAMC,UAAU,8BAA6BC,SAAC,sDAIhDF,cAACI,IAAI,CAACH,UAAU,OAAMC,SACpBF,cAAC2B,IAAI,CAACC,GAAG,mBAAkB1B,SAAC,8BAE9BF,cAACI,IAAI,CAAAF,SACHF,cAACK,IAAI,CAACwB,GAAG,IAAG3B,SACVF,cAAC8B,IAAO,CACNC,SAAUrC,EACVsC,QAASnC,GAzFZoC,KACnBtC,GAAW,GACXuC,IACGC,KAAK,iBAAkB,CAAEC,MAAOjD,EAAIK,aACpC6C,MAAMC,IACL,MAAM,KAAEC,GAASD,EAEjB,GADA3C,GAAW,GACP4C,EAAKC,MAEP,OADAC,YAAWF,EAAKC,OACT,EAET,MAAME,EAAW,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMG,KACnBC,YAAYD,GACZxD,EAAQ0D,KAAK,IAAI,IAElBC,OAAOC,IACNC,QAAQC,IAAIF,GACZnD,GAAW,GACX8C,YAAW,oCAAoC,GAC/C,IAuEkBjB,KAAK,SACLyB,MAAM,UACNhD,UAAU,OAAMC,SAEfR,EACCgB,eAAAwC,WAAA,CAAAhD,SAAA,CACEF,cAAA,QACEC,UAAU,mCACVkD,KAAK,SACL,cAAY,SAEdnD,cAAA,QAAMC,UAAU,kBAAiBC,SAAC,kBAKpCF,cAAAkD,WAAA,CAAAhD,SAAE,iCAYpB,C,mCClJV,2fAIO,MAAMkD,EAAgBC,GACpBC,IAAMC,QAAQF,EAAM,CACzBG,SAAU,YACVC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAIDtB,EAAcY,GAClBC,IAAMd,MAAMa,EAAM,CACvBG,SAAU,YACVC,WAAW,EACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAIDC,EAAgBC,IAC3B,MAAMC,GAAM,IAAIC,MAAOC,cACjBC,EAAMH,EAAMD,EAUlB,MARkBK,MAChB,IAAIC,EAAM,GACV,IAAK,IAAIC,EAAQN,EAAKM,EAAQH,EAAKG,IACjCD,EAAI3B,KAAK4B,GAEX,OAAOD,CAAG,EAGLD,EAAW,EAGPG,EAAkBA,IACtB,SAGIC,EAAgBT,IAC3B,MAAMI,GAAM,IAAIF,MAAOC,cACjBF,EAAMG,EAAMJ,EAUlB,MARkBK,MAChB,IAAIC,EAAM,GACV,IAAK,IAAIC,EAAQH,EAAKG,EAAQN,EAAKM,IACjCD,EAAI3B,KAAK4B,GAEX,OAAOD,CAAG,EAGLD,EAAW,EAGPK,EAAkBA,IAC7B,0JAEWC,EAAQ,WACnB,OAAOC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,EAC9C,EAEaC,EAAgBA,CAACC,EAAKjB,IAC7BiB,EAAIjB,OAASA,GACflB,QAAQC,IAAIkC,EAAKjB,GACViB,EAAIF,OAAO,EAAGf,GAAU,OAE1BiB,EAGIC,EAAiBC,GACxBA,EACKA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,UAAU,GAC7C,KASHC,EAAaxE,GACpBA,EACKA,EAAKyE,MAAM,EAAG,GAAGH,cAEnB,KAGII,EAAaC,GAClB,GAANC,OAAUD,GAGCE,EAAaC,IAAU,IAADC,EAC4BC,EAI3DC,EAEKC,EANP,OAAIC,MAASC,OAAO,UAAYD,IAAOL,GAAMM,OAAO,QAC5C,SAANR,OAA4B,QAA5BI,EAAgBG,IAAOL,UAAK,IAAAE,OAAA,EAAZA,EAAcI,OAAO,WAErCD,MAASE,SAAS,EAAG,QAAQD,OAAO,WAAwB,QAAjBL,EAAKI,IAAOL,UAAK,IAAAC,OAAA,EAAZA,EAAcK,OAAO,SAE/D,aAANR,OAAgC,QAAhCK,EAAoBE,IAAOL,UAAK,IAAAG,OAAA,EAAZA,EAAcG,OAAO,WAEtB,QAAnBF,EAAOC,IAAOL,UAAK,IAAAI,OAAA,EAAZA,EAAcE,OAAO,gBAC9B,EAGWE,EAAqB,SAAUC,EAAMT,GAChD/C,QAAQC,IAAI8C,EAAM,SAIlBS,EAAO,IAAIpC,KAAKoC,GAChBxD,QAAQC,IAAIuD,EAAM,QAElB,IAAIC,EAAOD,EAAKnC,cACZqC,EAAQF,EAAKG,WAAa,EAC1BC,EAAMJ,EAAKK,UAIf,OAFe,IAAIzC,KADGqC,EAAO,IAAMC,EAAQ,IAAME,EACZ,IAAMb,EAG7C,EAEae,EAAuBN,IAClC,MAAMO,EAAI,IAAI3C,KAAKoC,GAUnB,MAAO,CAAEI,IAREG,EAAE1C,cAKS,KAJV0C,EAAEJ,WAAa,GAIS,IAH3BI,EAAEF,UAMGd,KALFgB,EAAEC,WAGU,KAFVD,EAAEE,aAII,C","file":"static/js/174.f5836d3f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport axios from \"../../store/axios\";\nimport { useForm } from \"react-hook-form\";\nimport { errorAlert } from \"../../utils\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { handleLogin } from \"../../store/apiCall\";\n\nconst Login = ({ history }) => {\n  const { id } = useParams();\n  const [confirmpass, setconfirmpass] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleSignin = () => {\n    setloading(true);\n    axios\n      .post(\"/resetpassword\", { token: id, password })\n      .then((res) => {\n        const { data } = res;\n        setloading(false);\n        if (data.error) {\n          errorAlert(data.error);\n          return 0;\n        }\n        const user = data?.user;\n        handleLogin(user);\n        history.push(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        setloading(false);\n        errorAlert(\"Connection  error try again later\");\n      });\n  };\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Reset Password</h1>\n                    <p className=\"text-muted\">Enter your new password</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <input\n                        value={password}\n                        className=\"form-control  col-6\"\n                        name=\"password\"\n                        ref={register({ required: true, minLength: 6 })}\n                        onChange={(e) => setpassword(e.target.value)}\n                        type=\"password\"\n                        required\n                        placeholder=\"Enter Password\"\n                      />\n                      <br />\n                    </CInputGroup>\n                    {errors.password && (\n                      <span className=\" form-error text-danger mb-2\">\n                        Password is required with at least 6 characters\n                      </span>\n                    )}\n                    <CInputGroup className=\"mb-2\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <input\n                        type=\"password\"\n                        className=\"form-control  col-6\"\n                        placeholder=\"Confirm password\"\n                        name=\"confirmpass\"\n                        ref={register({\n                          required: true,\n                          validate: (value) => value === password,\n                        })}\n                        value={confirmpass}\n                        required\n                        onChange={(e) => setconfirmpass(e.target.value)}\n                      />\n                      <br />\n                    </CInputGroup>\n                    {errors.confirmpass && (\n                      <span className=\"form-error text-danger mb-2\">\n                        Please confirm password. It should match password\n                      </span>\n                    )}\n                    <CRow className=\"mb-3\">\n                      <Link to=\"/password/forget\">Send email Resend Code </Link>\n                    </CRow>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton\n                          disabled={loading}\n                          onClick={handleSubmit(handleSignin)}\n                          type=\"submit\"\n                          color=\"primary\"\n                          className=\"px-4\"\n                        >\n                          {loading ? (\n                            <>\n                              <span\n                                className=\"spinner-border spinner-border-sm\"\n                                role=\"status\"\n                                aria-hidden=\"true\"\n                              ></span>\n                              <span className=\"visually-hidden\">\n                                Loading...\n                              </span>\n                            </>\n                          ) : (\n                            <>Submit</>\n                          )}\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Login;\n","//import {API_BASE_URL} from './api'\nimport moment from \"moment\";\nimport { toast } from \"react-toastify\";\n\nexport const successAlert = (text) => {\n  return toast.success(text, {\n    position: \"top-right\",\n    autoClose: false,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const errorAlert = (text) => {\n  return toast.error(text, {\n    position: \"top-right\",\n    autoClose: false,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport const getYearsList = (length) => {\n  const min = new Date().getFullYear();\n  const max = min + length;\n\n  const yearArray = () => {\n    let arr = [];\n    for (let index = min; index < max; index++) {\n      arr.push(index);\n    }\n    return arr;\n  };\n\n  return yearArray();\n};\n\nexport const currentCurrency = () => {\n  return \"GH¢\";\n};\n\nexport const getYearsPast = (length) => {\n  const max = new Date().getFullYear();\n  const min = max - length;\n\n  const yearArray = () => {\n    let arr = [];\n    for (let index = max; index > min; index--) {\n      arr.push(index);\n    }\n    return arr;\n  };\n\n  return yearArray();\n};\n\nexport const getEmailPattern = () =>\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const getID = function () {\n  return Math.random().toString(36).substr(2, 9);\n};\n\nexport const getTrimString = (str, length) => {\n  if (str.length > length) {\n    console.log(str, length);\n    return str.substr(0, length) + \"...\";\n  }\n  return str;\n};\n\nexport const getCapitalize = (string) => {\n  if (string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n  } else return null;\n};\n\nexport const getLowerCase = (string) => {\n  if (string) {\n    return string.toLowerCase();\n  } else return null;\n};\n\nexport const getIntial = (name) => {\n  if (name) {\n    return name.slice(0, 1).toUpperCase();\n  }\n  return null;\n};\n\nexport const getImgSrc = (src) => {\n  return `${src}`;\n};\n\nexport const timeStamp = (time) => {\n  if (moment().format(\"dddd\") === moment(time).format(\"dddd\")) {\n    return `Today ${moment(time)?.format(\"h:mm a\")}`;\n  } else if (\n    moment().subtract(1, \"days\").format(\"dddd\") === moment(time)?.format(\"dddd\")\n  ) {\n    return `Yesterday ${moment(time)?.format(\"h:mm a\")}`;\n  } else {\n    return moment(time)?.format(\"dddd,  h:mm a\");\n  }\n};\n\nexport const combineDateAndTime = function (date, time) {\n  console.log(time, \"tieme\");\n  // let d = new Date();\n  // time =   d.setTime(time);\n\n  date = new Date(date);\n  console.log(date, \"date\");\n\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1; // Jan is 0, dec is 11\n  var day = date.getDate();\n  var dateString = \"\" + year + \"-\" + month + \"-\" + day;\n  var combined = new Date(dateString + \" \" + time);\n\n  return combined;\n};\n\nexport const separateDateandTime = (date) => {\n  const d = new Date(date);\n\n  var year = d.getFullYear();\n  var month = d.getMonth() + 1; // Jan is 0, dec is 11\n  var da = d.getDate();\n  var hours = d.getHours();\n  var minutes = d.getMinutes();\n  var day = \"\" + year + \"-\" + month + \"-\" + da;\n  var time = \"\" + hours + \": \" + minutes;\n\n  return { day, time };\n};\n\nexport const sortArray = (arr) => {\n  arr.sort(function (x, y) {\n    return x.updatedAt - y.updatedAt;\n  });\n};\n"],"sourceRoot":""}