{"version":3,"sources":["TeachersComponents/message/MessageStudent.js","components/messages/SendToForm.js"],"names":["MessageStudent","message","setmessage","useState","recipient","setrecipient","recipientOptions","setrecipientsOptions","sender","useSelector","selectUser","classes","selectClasses","search","setsearch","_jsxs","children","className","_jsx","action","onSubmit","e","preventDefault","axios","get","concat","then","res","data","error","console","log","errorAlert","users","length","map","user","id","userID","name","surname","value","onChange","target","type","placeholder","handleSearchbyClass","defaultValue","hidden","classCode","_id","SendForm","onSend","post","successAlert","recipientsOptions","searchOptions","sendto","SendToForm","_ref","loading","htmlFor","defaultChecked","disabled","readOnly","rows","required","onClick","role"],"mappings":"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","file":"static/js/68.d7d58900.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport SendForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../store/slices/schoolSlice\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction MessageStudent() {\n  const [message, setmessage] = useState(\"\");\n  const [recipient, setrecipient] = useState(\"\");\n  const [recipientOptions, setrecipientsOptions] = useState([]);\n  const sender = useSelector(selectUser);\n  const classes = useSelector(selectClasses);\n  const [search, setsearch] = useState(\"\");\n\n  const handleSearchbyName = (e) => {\n    e.preventDefault();\n    axios.get(`/students/search/${search}`).then((res) => {\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      if (res.data.users.length <= 0) {\n        return errorAlert(\"No students Find\");\n      }\n      setsearch(\"\");\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            surname: user.surname,\n          };\n        })\n      );\n      console.log(recipientOptions);\n    });\n  };\n\n  const handleSearchbyClass = (e) => {\n    axios.get(`/students/class/${e}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      axios\n        .post(`/chats/user`, {\n          message,\n          sender: sender?.id,\n          userID: recipient,\n        })\n        .then((res) => {\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientOptions.map((e) => (\n      <option key={e.id} value={e.id}>\n        {e.id} - {e.name} {e.surname}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"mb-5 content__container row\">\n        <h3>Select Student </h3>\n        <form action=\"\" onSubmit={handleSearchbyName} className=\"mb-5 col-md-6\">\n          <label className=\"form-label\">\n            Search Student by Name or Student ID\n          </label>\n          <input\n            value={search}\n            onChange={(e) => setsearch(e.target.value)}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Type here...\"\n          />\n        </form>\n        <div className=\"col-md-5\">\n          <label className=\"form-label\">OR Select Student's Class</label>\n          <select\n            onChange={(e) => handleSearchbyClass(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.map((e) => (\n              <option key={e._id} value={e.classCode}>\n                {e.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      <SendForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        recipientsOptions={recipientOptions}\n        recipient={recipient}\n        searchOptions={searchOptions}\n        sendto=\"Students\"\n        setrecipient={setrecipient}\n        sender={sender?.id}\n      />\n    </div>\n  );\n}\n\nexport default MessageStudent;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}