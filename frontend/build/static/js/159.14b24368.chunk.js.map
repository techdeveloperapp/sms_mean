{"version":3,"sources":["AdminComponents/academics/correspondances/CorrespondanceForm.js","AdminComponents/academics/correspondances/EditCorrespondance.js"],"names":["CorrespondanceForm","props","register","handleSubmit","errors","useForm","salutation","setsalutation","subject","setsubject","body","setbody","closing","setclosing","signature","setsignature","date","setdate","address","setaddress","loading","isEdit","handleFunc","_jsxs","onSubmit","action","children","className","_jsx","htmlFor","ref","required","value","onChange","e","target","name","rows","type","disabled","role","EditCorrespondance","useState","setloading","editLoading","seteditLoading","id","useParams","useEffect","axios","get","concat","then","res","doc","data","console","log","moment","format","Loading","EditForm","handleEdit","put","error","errorAlert","successAlert","catch","err"],"mappings":"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","file":"static/js/159.14b24368.chunk.js","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction CorrespondanceForm(props) {\n  const { register, handleSubmit, errors } = useForm();\n\n  let {\n    salutation,\n    setsalutation,\n    subject,\n    setsubject,\n    body,\n    setbody,\n    closing,\n    setclosing,\n    signature,\n    setsignature,\n    date,\n    setdate,\n    address,\n    setaddress,\n    loading,\n    isEdit,\n    handleFunc,\n  } = props;\n\n  return (\n    <form onSubmit={handleSubmit(handleFunc)} action=\"\">\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Address\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            ref={register({ required: true })}\n            value={address}\n            onChange={(e) => setaddress(e.target.value)}\n            name=\"address\"\n            rows=\"3\"\n            className=\"form-control\"\n          ></textarea>\n          {errors.address && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Salutations\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            value={salutation}\n            onChange={(e) => setsalutation(e.target.value)}\n            type=\"text\"\n            ref={register({ required: true })}\n            className=\"form-control\"\n            name=\"salutation\"\n          />\n          {errors.salutation && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Subject\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={subject}\n            onChange={(e) => setsubject(e.target.value)}\n            type=\"text\"\n            className=\"form-control\"\n            name=\"subject\"\n          />\n          {errors.subject && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Body\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            className=\"form-control\"\n            name=\"body\"\n            ref={register({ required: true })}\n            value={body}\n            onChange={(e) => setbody(e.target.value)}\n            rows=\"10\"\n          ></textarea>\n          {errors.body && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Closing\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={closing}\n            onChange={(e) => setclosing(e.target.value)}\n            type=\"text\"\n            className=\"form-control\"\n            name=\"closing\"\n          />\n          {errors.body && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Signature\n        </label>\n        <div className=\"col-sm-10\">\n          <textarea\n            className=\"form-control\"\n            name=\"signature\"\n            ref={register({ required: true })}\n            value={signature}\n            onChange={(e) => setsignature(e.target.value)}\n            rows=\"3\"\n          ></textarea>\n          {errors.signature && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\" mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Date\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            ref={register({ required: true })}\n            value={date}\n            onChange={(e) => setdate(e.target.value)}\n            type=\"date\"\n            className=\"form-control\"\n            name=\"date\"\n          />\n          {errors.date && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      <div className=\"\">\n        <div className=\"col-sm-10\">\n          <button disabled={loading} type=\"submit\" className=\"btn blue__btn\">\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {isEdit ? \"Save Changes\" : \"Add\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default CorrespondanceForm;\n","import React, { useState, useEffect } from \"react\";\nimport EditForm from \"./CorrespondanceForm\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert, successAlert } from \"../../../utils\";\nimport Loading from \"../../../Loading\";\nimport moment from \"moment\";\n\nfunction EditCorrespondance() {\n  const [address, setaddress] = useState(\"\");\n  const [subject, setsubject] = useState(\"\");\n  const [body, setbody] = useState(\"\");\n  const [closing, setclosing] = useState(\"\");\n  const [signature, setsignature] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [salutation, setsalutation] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [editLoading, seteditLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setloading(true);\n    axios.get(`/correspondance/${id}`).then((res) => {\n      let doc = res.data.doc;\n      console.log(res);\n      setloading(false);\n      if (doc) {\n        setaddress(doc?.address);\n        setsubject(doc?.subject);\n        setbody(doc?.body);\n        setclosing(doc?.closing);\n        setsignature(doc?.signature);\n        setdate(moment(doc?.date).format(\"YYYY-MM-D\"));\n        setsalutation(doc?.salutation);\n      }\n    });\n  }, [id]);\n\n  const handleEdit = () => {\n    seteditLoading(true);\n    axios\n      .put(`/correspondance/update/${id}`, {\n        address,\n        subject,\n        body,\n        closing,\n        signature,\n        date,\n        salutation,\n      })\n      .then((res) => {\n        seteditLoading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n        }\n        successAlert(\"Correspondance changes successsfully saved\");\n      })\n      .catch((err) => {\n        console.log(err);\n        seteditLoading(false);\n        errorAlert(\"Failed\");\n      });\n  };\n\n  return (\n    <div className=\"content__container\">\n      {loading && <Loading />}\n      <h3>Edit Correspondance</h3>\n      <EditForm\n        address={address}\n        setaddress={setaddress}\n        body={body}\n        setbody={setbody}\n        closing={closing}\n        setclosing={setclosing}\n        signature={signature}\n        setsignature={setsignature}\n        date={date}\n        loading={editLoading}\n        setdate={setdate}\n        setsalutation={setsalutation}\n        salutation={salutation}\n        subject={subject}\n        setsubject={setsubject}\n        handleFunc={handleEdit}\n      />\n    </div>\n  );\n}\n\nexport default EditCorrespondance;\n"],"sourceRoot":""}