{"version":3,"sources":["AdminComponents/finance/payrow/EditPayrow.js","AdminComponents/finance/payrow/Payrow.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","_jsxs","MuiDialogTitle","disableTypography","className","_jsx","Typography","variant","IconButton","onClick","CloseIcon","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","_ref","open","setOpen","name","salary","allowance","bonus","setname","setsalary","isAdd","loading","onSubmit","setallowance","setbonus","register","handleSubmit","errors","useForm","handleClose","Dialog","fullWidth","maxWidth","id","action","htmlFor","_Fragment","ref","required","type","value","onChange","e","target","readOnly","Button","disabled","role","PaymentPlan","user","useSelector","selectUser","planData","setplanData","useState","openEditService","setopenEditService","openAddService","setopenAddService","editID","seteditID","setloading","useEffect","axios","get","then","res","data","sign","currentCurrency","scope","map","plan","pay","find","_id","handleClickEditOpen","EditIcon","handleDeletePlan","delete","concat","error","errorAlert","filter","catch","err","console","log","DeleteForeverIcon","colSpan","AddIcon","Edit","handleEditService","put","async","successAlert","newData","findIndex","doc","post","activity","handleAddPlans"],"mappings":"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","file":"static/js/71.6a34b2b8.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { useForm } from 'react-hook-form';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs({\n    open, setOpen, \n    name, salary,\n    allowance, bonus, \n    setname,\n    setsalary,\n    isAdd,\n    loading,\n    onSubmit,\n    setallowance,\n    setbonus\n  }) {\n\n    const { register, handleSubmit, errors } = useForm()\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <Dialog \n      onClose={handleClose} \n      fullWidth={true}\n      maxWidth=\"sm\"\n      aria-labelledby=\"customized-dialog-title\" \n      open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            {isAdd ? \" Add New Staff Position\" : \"Edit Staff Position\"}\n           \n        </DialogTitle>\n        <form action=\"\">\n        <DialogContent >\n              <div className=\"mb-3\">\n                <label htmlFor=\"\">Position's Name</label>\n                {isAdd ? \n                <>\n                   <input \n                    ref={register({ required: true })}\n                    type=\"text\" \n                    name=\"name\"\n                    value={name}\n                    onChange={e => setname(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.name && <div className=\"text-danger mb-3\">This field  is required.</div>}\n                </> : \n                   <input \n                   ref={register({ required: true })}\n                   type=\"text\" \n                   name=\"name\"\n                   value={name}\n                   readOnly\n                   className=\"form-control\"  \n                   />\n                }\n               \n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Salary</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"salary\"\n                    value={salary}\n                    onChange={e => setsalary(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.salary && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Allowance</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"allowance\"\n                    value={allowance}\n                    onChange={e => setallowance(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.allowance && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n               <div className=\"mb-3\">\n                <label htmlFor=\"\">Bonus</label>\n                <input \n                    ref={register({ required: true })}\n                    type=\"number\" \n                    name=\"bonus\"\n                    value={bonus}\n                    onChange={e => setbonus(e.target.value)}\n                    className=\"form-control\"  \n                    />\n                    {errors.bonus && <div className=\"text-danger mb-3\">This field  is required.</div>}\n               </div>\n            </DialogContent>\n            <DialogActions>\n                <Button \n                disabled={loading} \n                onClick={handleSubmit(onSubmit)} \n                color=\"primary\">\n                    {loading && \n                        <div \n                        className=\"spinner-border spinner-border-sm\" \n                        role=\"status\">\n                        </div>\n                    }\n                    {isAdd ? \"Add\" : \"Save Changes\"}\n                </Button>\n                <Button onClick={handleClose} color=\"secondary\">\n                    Cancel\n                </Button>\n           </DialogActions>\n           </form>\n      </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport axios from \"../../../store/axios\";\nimport Edit from \"./EditPayrow\";\nimport { selectUser } from \"../../../store/slices/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { errorAlert, successAlert, currentCurrency } from \"../../../utils\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nfunction PaymentPlan() {\n  const user = useSelector(selectUser);\n  const [planData, setplanData] = useState([]);\n  const [openEditService, setopenEditService] = useState(false);\n  const [openAddService, setopenAddService] = useState(false);\n  const [name, setname] = useState(\"\");\n  const [editID, seteditID] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [allowance, setallowance] = useState(\"\");\n  const [bonus, setbonus] = useState(\"\");\n  const [salary, setsalary] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/payrow\").then((res) => {\n      setplanData(res.data);\n    });\n  }, []);\n\n  let sign = currentCurrency();\n\n  const handleAddPlans = () => {\n    setloading(true);\n    axios\n      .post(\"/payrow/add\", {\n        name,\n        salary,\n        allowance,\n        bonus,\n      })\n      .then(async (res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setloading(false);\n        setopenAddService(false);\n        setsalary(\"\");\n        setallowance(\"\");\n        setbonus(\"\");\n        setname(\"\");\n        successAlert(\"Changes Saved\");\n        setplanData([res.data.doc, ...planData]);\n        await axios.post(\"/activitylog/create\", {\n          activity: ` ${name} payrow was created`,\n          user: \"admin\",\n        });\n      })\n      .catch(() => {\n        setloading(false);\n        errorAlert(\"Changes failed to save\");\n      });\n  };\n\n  const handleClickEditOpen = (id) => {\n    setopenEditService(true);\n    let pay = planData?.find((e) => e._id === id);\n    setsalary(pay?.salary);\n    setallowance(pay?.allowance);\n    setbonus(pay?.bonus);\n    setname(pay?.name);\n    seteditID(id);\n  };\n\n  const handleEditService = () => {\n    setloading(true);\n    axios\n      .put(`/payrow/update/${editID}`, {\n        salary,\n        allowance,\n        bonus,\n      })\n      .then(async (res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setopenEditService(false);\n        setsalary(\"\");\n        setallowance(\"\");\n        setbonus(\"\");\n        setname(\"\");\n        successAlert(\"Changes Saved\");\n        let newData = planData;\n        let index = planData.findIndex((e) => e._id === editID);\n        newData[index] = res.data.doc;\n        setplanData(newData);\n        await axios.post(\"/activitylog/create\", {\n          activity: ` ${name} payrow was edited`,\n          user: \"admin\",\n        });\n      })\n      .catch((err) => {\n        setloading(false);\n        console.log(err);\n        errorAlert(\"Changes failed to save\");\n      });\n  };\n\n  const handleDeletePlan = (id) => {\n    axios\n      .delete(`/payrow/delete/${id}`)\n      .then((res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setplanData(planData.filter((e) => e._id !== id));\n      })\n      .catch((err) => {\n        console.log(err);\n        errorAlert(\"Delete failed\");\n      });\n  };\n\n  return (\n    <div>\n      <h3 className=\"my-5\">Staff Roles and Payrow Details</h3>\n      <table className=\"table content__container\">\n        <thead>\n          <tr>\n            <th scope=\"col\">\n              <h4>Staff Position</h4>\n              <p>\n                {\" \"}\n                <small> Available position in the school </small>\n              </p>\n            </th>\n            <th>\n              <h5>\n                <strong> Salary ({sign})</strong>\n              </h5>\n            </th>\n            <th>\n              <h5>\n                <strong> Allowance ({sign})</strong>\n              </h5>\n            </th>\n            <th>\n              <h5>\n                <strong> Bonus ({sign})</strong>\n              </h5>\n            </th>\n            {user?.role === \"admin\" && (\n              <th>\n                <h5>Action</h5>\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {planData &&\n            planData.map((plan) => (\n              <tr key={plan._id}>\n                <th scope=\"row\">{plan?.name}</th>\n                <td>{plan?.salary}</td>\n                <td>{plan?.allowance}</td>\n                <td>{plan?.bonus}</td>\n                {user?.role === \"admin\" && (\n                  <td className=\"d-flex\">\n                    <IconButton onClick={() => handleClickEditOpen(plan?._id)}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleDeletePlan(plan?._id)}>\n                      <DeleteForeverIcon />\n                    </IconButton>\n                  </td>\n                )}\n              </tr>\n            ))}\n          <tr>\n            <th colSpan=\"4\">Add Additional Position</th>\n            <th>\n              <IconButton onClick={() => setopenAddService(true)}>\n                <AddIcon />\n              </IconButton>\n            </th>\n          </tr>\n        </tbody>\n      </table>\n\n      {/* edit */}\n      <Edit\n        open={openEditService}\n        loading={loading}\n        salary={salary}\n        setsalary={setsalary}\n        bonus={bonus}\n        name={name}\n        setname={setname}\n        allowance={allowance}\n        setallowance={setallowance}\n        setbonus={setbonus}\n        setOpen={setopenEditService}\n        onSubmit={handleEditService}\n      />\n\n      {/* add new */}\n      <Edit\n        name={name}\n        loading={loading}\n        setname={setname}\n        allowance={allowance}\n        setallowance={setallowance}\n        open={openAddService}\n        salary={salary}\n        bonus={bonus}\n        setbonus={setbonus}\n        setsalary={setsalary}\n        isAdd={true}\n        setOpen={setopenAddService}\n        onSubmit={handleAddPlans}\n      />\n    </div>\n  );\n}\n\nexport default PaymentPlan;\n"],"sourceRoot":""}