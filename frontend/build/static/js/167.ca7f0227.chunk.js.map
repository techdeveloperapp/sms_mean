{"version":3,"sources":["AdminComponents/messages/BulkMessage.js","components/messages/SendToForm.js"],"names":["BulkMessage","message","setmessage","useState","recipient","setrecipient","sender","useSelector","selectUser","loading","setloading","recipientsOptions","id","name","_jsx","children","SendForm","onSend","async","e","preventDefault","axios","get","then","res","data","map","post","telephone","i","mobilenumber","senderID","userID","response","error","errorAlert","successAlert","catch","err","console","log","re","parents","docs","length","parent","_id","mobile","searchOptions","option","value","sendto","SendToForm","_ref","_jsxs","action","className","htmlFor","onChange","target","defaultChecked","hidden","disabled","type","readOnly","rows","required","placeholder","onClick","role"],"mappings":"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","file":"static/js/167.ca7f0227.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport SendForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction BulkMessage() {\n  const [message, setmessage] = useState(\"\");\n  const [recipient, setrecipient] = useState(\"\");\n  const sender = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n\n  const recipientsOptions = [\n    { id: \"students\", name: \"All Students\" },\n    { id: \"parents\", name: \"All Parents\" },\n    { id: \"staff\", name: \"All Staff\" },\n  ];\n\n  // sender: sender?.id,\n\n  const searchOptions = () => {\n    return recipientsOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name}\n      </option>\n    ));\n  };\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n\n    if (message && recipient) {\n      setloading(true);\n      switch (recipient) {\n        case \"staff\":\n          return await axios.get(\"/teachers\").then((res) => {\n            let staff = res.data;\n            staff.map(\n              async (i) =>\n                await axios\n                  .post(`/chats`, {\n                    message,\n                    telephone: i.telephone || i?.mobilenumber,\n                    senderID: sender?.id,\n                    userID: i?.userID,\n                  })\n                  .then((response) => {\n                    setloading(false);\n                    if (response.data.error) {\n                      errorAlert(response.data.error);\n                      return 0;\n                    }\n                    successAlert(\"message send to all staff members\");\n                    setmessage(\"\");\n                  })\n                  .catch((err) => {\n                    setloading(false);\n                    console.log(err);\n                  })\n            );\n          });\n        case \"students\":\n          return await axios.get(\"/students\").then((res) => {\n            let students = res.data;\n            students.map(\n              async (re) =>\n                await axios\n                  .post(`/chats`, {\n                    message,\n                    userID: re?.userID,\n                    telephone: re.telephone || re?.mobilenumber,\n                    senderID: sender?.id,\n                  })\n                  .then((response) => {\n                    setloading(false);\n                    if (response.data.error) {\n                      errorAlert(response.data.error);\n                      return 0;\n                    }\n                    successAlert(\"message send to all students\");\n                    setmessage(\"\");\n                  })\n                  .catch((err) => {\n                    setloading(false);\n                    console.log(err);\n                  })\n            );\n          });\n        case \"parents\":\n          return await axios.get(\"/students/parents\").then((res) => {\n            let parents = res.data.docs;\n            console.log(parents);\n            // eslint-disable-next-line no-lone-blocks\n            {\n              parents.length > 0\n                ? parents.map(\n                    async (i) =>\n                      await axios\n                        .post(`/chats`, {\n                          message,\n                          parent: i._id,\n                          userID: \"parent\",\n                          telephone: i?.mobile,\n                          sender: sender?.id,\n                        })\n                        .then((response) => {\n                          setloading(false);\n                          if (response.data.error) {\n                            errorAlert(response.data.error);\n                            return 0;\n                          }\n                          successAlert(\"message send to all parents\");\n                          setmessage(\"\");\n                        })\n                        .catch((err) => {\n                          setloading(false);\n                          console.log(err);\n                        })\n                  )\n                : errorAlert(\"There are parents data\");\n              setloading(false);\n            }\n          });\n        default:\n          break;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <SendForm\n        message={message}\n        setmessage={setmessage}\n        onSend={handleSend}\n        recipientsOptions={recipientsOptions}\n        recipient={recipient}\n        setrecipient={setrecipient}\n        sender={sender?.id}\n        loading={loading}\n        searchOptions={searchOptions}\n        sendto=\"All\"\n      />\n    </div>\n  );\n}\n\nexport default BulkMessage;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}