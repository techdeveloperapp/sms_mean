{"version":3,"sources":["../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","AdminComponents/academics/classes/ClassForm.js","AdminComponents/academics/classes/EditClass.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["FormControlContext","React","useFormControl","ClassForm","props","campuses","useSelector","selectCampuses","divisions","selectDivisions","groups","selectFees","staff","setstaff","useState","years","selectYearGroup","register","handleSubmit","errors","useForm","name","setname","code","setcode","campus","academic","setacademic","division","setdivision","group","setgroup","prefect","setprefect","sba","setsba","sbaStaff","setsbaStaff","setcampus","teacher","loading","isEdit","handleAddClass","setteacher","prefects","setprefects","useEffect","axios","get","then","res","data","_jsxs","onSubmit","action","children","className","_jsx","htmlFor","value","onChange","e","target","defaultValue","hidden","length","map","year","disabled","type","ref","required","id","_id","userID","surname","Checkbox","checked","color","inputProps","role","EditClass","setloading","useParams","dispatch","useDispatch","classes","selectClasses","concat","error","errorAlert","doc","docs","campusID","teacherID","classCode","_Fragment","handleEdit","put","async","successAlert","setClasses","i","_res$data","post","activity","user","catch","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","inputRef","onBlur","onFocus","readOnly","tabIndex","other","_objectWithoutProperties","_useControlled","useControlled","controlled","default","Boolean","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","undefined","event","input","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","createSvgIcon","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_props$checkedIcon","_props$color","_props$icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","_props$size","size","capitalize","fontSize","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","alpha","hoverOpacity","colorSecondary"],"mappings":"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","file":"static/js/141.f3663767.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\nimport {\n  selectCampuses,\n  selectFees,\n  selectDivisions,\n  selectYearGroup,\n} from \"../../../store/slices/schoolSlice\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction ClassForm(props) {\n  const campuses = useSelector(selectCampuses);\n  const divisions = useSelector(selectDivisions);\n  const groups = useSelector(selectFees);\n  const [staff, setstaff] = useState([]);\n  const years = useSelector(selectYearGroup);\n  const { register, handleSubmit, errors } = useForm();\n  let {\n    name,\n    setname,\n    code,\n    setcode,\n    campus,\n    academic,\n    setacademic,\n    division,\n    setdivision,\n    group,\n    setgroup,\n    prefect,\n    setprefect,\n    sba,\n    setsba,\n    sbaStaff,\n    setsbaStaff,\n    setcampus,\n    teacher,\n    loading,\n    isEdit,\n    handleAddClass,\n    setteacher,\n  } = props;\n\n  const [prefects, setprefects] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/prefects\").then((res) => {\n      setprefects(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    axios.get(\"/teachers/teachers\").then((res) => {\n      setstaff(res.data);\n    });\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit(handleAddClass)} action=\"\">\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Academic Year\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            name=\"academic-calendar\"\n            className=\"form-select\"\n            value={academic}\n            onChange={(e) => setacademic(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {years.length > 0 ? (\n              years.map((e) => (\n                <option value={e.year} key={e.year}>\n                  {e.year}\n                </option>\n              ))\n            ) : (\n              <option disabled>No data</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Class Name\n        </label>\n        <div className=\"col-sm-10\">\n          <input\n            value={name}\n            onChange={(e) => setname(e.target.value)}\n            type=\"text\"\n            ref={register({ required: true })}\n            className=\"form-control\"\n            name=\"name\"\n          />\n          {errors.name && (\n            <span className=\" form-error text-danger mb-2\">\n              This field is required\n            </span>\n          )}\n        </div>\n      </div>\n      {!isEdit && (\n        <div className=\"row mb-3\">\n          <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n            Class Code\n          </label>\n          <div className=\"col-sm-10\">\n            <input\n              ref={register({ required: true })}\n              value={code}\n              onChange={(e) => setcode(e.target.value)}\n              type=\"text\"\n              className=\"form-control\"\n              name=\"code\"\n            />\n            {errors.code && (\n              <span className=\" form-error text-danger mb-2\">\n                This field is required\n              </span>\n            )}\n          </div>\n        </div>\n      )}\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Campus\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"campus\"\n            className=\"form-select\"\n            value={campus}\n            onChange={(e) => setcampus(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {campuses.length > 0 ? (\n              campuses.map((e) => (\n                <option key={e._id} value={e._id}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No campuses yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Group\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"campus\"\n            className=\"form-select\"\n            value={group}\n            onChange={(e) => setgroup(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {groups.length > 0 ? (\n              groups.map((e) => (\n                <option key={e._id} value={e._id}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No groups yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Division\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"campus\"\n            className=\"form-select\"\n            value={division}\n            onChange={(e) => setdivision(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {divisions.length > 0 ? (\n              divisions.map((e) => (\n                <option key={e._id} value={e.code}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No divisions yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Class Teacher\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={teacher}\n            onChange={(e) => setteacher(e.target.value)}\n            id=\"teacher\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {staff.length > 0 ? (\n              staff.map((e) => (\n                <option key={e.userID} value={e.userID}>\n                  {e.name} {e.surname}\n                </option>\n              ))\n            ) : (\n              <option disabled>No staff yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          Class Prefect\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"campus\"\n            className=\"form-select\"\n            value={prefect}\n            onChange={(e) => setprefect(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {prefects?.length > 0 ? (\n              prefects.map((e) => (\n                <option key={e?._id} value={e?.userID}>\n                  {e?.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No prefects yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          SBA Configuration\n        </label>\n        <div className=\"col-sm-10\">\n          <Checkbox\n            checked={sba}\n            color=\"primary\"\n            onChange={() => setsba(!sba)}\n            inputProps={{ \"aria-label\": \"primary checkbox\" }}\n          />\n        </div>\n      </div>\n      <div className=\"row mb-3\">\n        <label htmlFor=\"name\" className=\"col-sm-2 col-form-label\">\n          SBA Assign Staff\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            id=\"campus\"\n            className=\"form-select\"\n            value={sbaStaff}\n            onChange={(e) => setsbaStaff(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {staff.length > 0 ? (\n              staff.map((e) => (\n                <option key={e.userID} value={e.userID}>\n                  {e.name} {e.surname}\n                </option>\n              ))\n            ) : (\n              <option disabled>No staff yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"offset-sm-2\">\n          <button disabled={loading} type=\"submit\" className=\"btn blue__btn\">\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {isEdit ? \"Save Changes\" : \"Add\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default ClassForm;\n","import React, { useState, useEffect } from \"react\";\nimport ClassForm from \"./ClassForm\";\nimport axios from \"../../../store/axios\";\nimport { useParams } from \"react-router-dom\";\nimport { successAlert, errorAlert } from \"../../../utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectClasses, setClasses } from \"../../../store/slices/schoolSlice\";\n\nfunction EditClass() {\n  const [name, setname] = useState(\"\");\n  const [campus, setcampus] = useState(\"\");\n  const [teacher, setteacher] = useState(\"\");\n  const [code, setcode] = useState(\"\");\n  const [academic, setacademic] = useState(\"\");\n  const [loading, setloading] = useState(false);\n  const [division, setdivision] = useState(\"\");\n  const [group, setgroup] = useState(\"\");\n  const [prefect, setprefect] = useState(\"\");\n  const [sba, setsba] = useState(\"\");\n  const [sbaStaff, setsbaStaff] = useState(false);\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const classes = useSelector(selectClasses);\n\n  useEffect(() => {\n    axios.get(`/classes/${id}`).then((res) => {\n      if (res.data.error) {\n        errorAlert(res.data.error);\n        return 0;\n      }\n      let doc = res.data.docs;\n      setname(doc?.name);\n      setcampus(doc?.campusID);\n      setteacher(doc?.teacherID);\n      setcode(doc?.classCode);\n      setacademic(doc?.academic);\n      setdivision(doc?.division);\n      setgroup(doc?.group);\n      setsba(doc?.sba);\n      setsbaStaff(doc?.sbaStaff);\n      setprefect(doc?.prefect);\n    });\n  }, [id]);\n\n  const handleEdit = () => {\n    setloading(true);\n    axios\n      .put(`/classes/update/${id}`, {\n        name,\n        classCode: code,\n        campusID: campus,\n        academic,\n        teacherID: teacher,\n        prefect,\n        division,\n        sba,\n        group,\n        sbaStaff,\n      })\n      .then(async (res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          setloading(false);\n          return 0;\n        }\n        successAlert(\"successfully edited\");\n\n        dispatch(\n          setClasses(classes.map((i) => (i._id === id ? res.data?.doc : i)))\n        );\n        await axios.post(\"/activitylog/create\", {\n          activity: ` ${name} class was edited`,\n          user: \"admin\",\n        });\n        // await axios.post(`/fees/update/name`, {\n        //   name,\n        // });\n      })\n      .catch(() => {\n        errorAlert(\"something went wrong\");\n      });\n  };\n\n  return (\n    <>\n      <div className=\"content__container\">\n        <h3>Edit Class</h3>\n        <ClassForm\n          name={name}\n          handleAddClass={handleEdit}\n          setname={setname}\n          campus={campus}\n          academic={academic}\n          setacademic={setacademic}\n          setcampus={setcampus}\n          code={code}\n          loading={loading}\n          setcode={setcode}\n          teacher={teacher}\n          isEdit={true}\n          setdivision={setdivision}\n          division={division}\n          setgroup={setgroup}\n          group={group}\n          setprefect={setprefect}\n          prefects={prefect}\n          sba={sba}\n          setsba={setsba}\n          sbaStaff={sbaStaff}\n          setsbaStaff={setsbaStaff}\n          setteacher={setteacher}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default EditClass;\n","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}