{"version":3,"sources":["AdminComponents/messages/StaffMessage.js","components/messages/SendToForm.js"],"names":["StaffMessage","message","setmessage","useState","recipientsOptions","setrecipientsOptions","recipient","setrecipient","sender","useSelector","selectUser","loading","setloading","error","seterror","useEffect","axios","get","then","res","data","map","user","id","userID","name","telephone","mobilenumber","surname","_jsx","children","SendToForm","onSend","e","preventDefault","selectedStudent","find","i","post","errorAlert","successAlert","catch","err","console","log","searchOptions","option","_jsxs","value","sendto","_ref","action","className","htmlFor","onChange","target","defaultChecked","hidden","disabled","type","readOnly","rows","required","placeholder","onClick","role"],"mappings":"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","file":"static/js/169.4296e9bd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SendToForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction StaffMessage() {\n  const [message, setmessage] = useState(\"\");\n  const [recipientsOptions, setrecipientsOptions] = useState([]);\n  const [recipient, setrecipient] = useState(\"\");\n  const sender = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/teachers\").then((res) => {\n      setrecipientsOptions(\n        res.data.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.telephone || user?.mobilenumber,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  }, []);\n\n  const onSend = (e) => {\n    e.preventDefault();\n    seterror(\"\");\n    if (!recipient) {\n      seterror(\"Please select recipient\");\n    }\n\n    if (message && recipient) {\n      setloading(true);\n      let selectedStudent = recipientsOptions.find((i) => i.id === recipient);\n      axios\n        .post(`/chats`, {\n          message,\n          telephone: selectedStudent?.telephone,\n          userID: recipient,\n          sender: sender?.id,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setloading(false);\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientsOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <SendToForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        loading={loading}\n        recipientsOptions={recipientsOptions}\n        recipient={recipient}\n        setrecipient={setrecipient}\n        sender={sender?.id}\n        searchOptions={searchOptions}\n        sendto=\"Staff\"\n        error={error}\n      />\n    </div>\n  );\n}\n\nexport default StaffMessage;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}