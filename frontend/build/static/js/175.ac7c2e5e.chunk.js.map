{"version":3,"sources":["StudentComponents/messages/MessageTeacher.js","components/messages/SendToForm.js"],"names":["MessageTeacher","message","setmessage","useState","recipient","setrecipient","recipientOptions","setrecipientOptions","user","useSelector","selectUser","loading","setloading","useEffect","axios","get","then","res","data","map","e","id","userID","name","surname","_jsx","children","SendForm","onSend","preventDefault","post","senderID","error","errorAlert","successAlert","recipientsOptions","sendto","searchOptions","option","_jsxs","value","sender","SendToForm","_ref","action","className","htmlFor","onChange","target","defaultChecked","hidden","disabled","type","readOnly","rows","required","placeholder","onClick","role"],"mappings":"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","file":"static/js/175.ac7c2e5e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SendForm from \"../../components/messages/SendToForm\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../store/slices/userSlice\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\n\nfunction MessageTeacher() {\n  const [message, setmessage] = useState(\"\");\n  const [recipient, setrecipient] = useState(\"\");\n  const [recipientOptions, setrecipientOptions] = useState([]);\n  const user = useSelector(selectUser);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    axios.get(\"/teachers\").then((res) => {\n      setrecipientOptions(\n        res.data.map((e) => {\n          return {\n            id: e.userID,\n            name: e.name,\n            surname: e.surname,\n          };\n        })\n      );\n    });\n  }, []);\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      setloading(true);\n      axios\n        .post(`/chats/user`, {\n          message,\n          senderID: user?.userID,\n          userID: recipient,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        });\n    }\n  };\n\n  const searchOptions = () => {\n    return recipientOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <SendForm\n        message={message}\n        setmessage={setmessage}\n        onSend={onSend}\n        recipientsOptions={recipientOptions}\n        recipient={recipient}\n        sendto=\"Teacher\"\n        loading={loading}\n        searchOptions={searchOptions}\n        setrecipient={setrecipient}\n        sender={user?.userID}\n      />\n    </div>\n  );\n}\n\nexport default MessageTeacher;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}