{"version":3,"sources":["TeachersComponents/notifications/Notification.js","AdminComponents/shared/Search.js","components/dashboard/EditNotice.js","components/dashboard/Notice.js"],"names":["NotificationsPage","date","setdate","useState","title","settitle","notices","setnotices","storeData","setstoreData","useEffect","axios","get","then","res","data","inputFields","type","value","label","name","onChange","_jsxs","className","children","_jsx","Search","handleReset","e","preventDefault","handleSearch","newNotices","filter","i","toLowerCase","includes","description","Date","createdAt","toISOString","slice","length","map","notice","Notice","id","_id","isReset","createdBy","_Fragment","props","noActions","input","htmlFor","target","hidden","defaultValue","options","option","disabled","placeholder","concat","onClick","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","classes","onClose","other","MuiDialogTitle","disableTypography","Typography","variant","IconButton","CloseIcon","DialogContent","MuiDialogContent","CustomizedDialogs","_ref","open","setOpen","handleDelete","editData","register","handleSubmit","errors","useForm","handleClose","Dialog","maxWidth","fullWidth","dividers","action","ref","required","moment","format","setdescription","rows","createdby","setcreatedby","loading","handleCreate","isEdit","colors","bgColor","Math","floor","random","Chip","style","backgroundColor","fromNow","seteditID","OpenInNewIcon","Edit"],"mappings":"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","file":"static/js/31.0d37f1e1.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Search from \"../../AdminComponents/shared/Search\";\nimport Notice from \"../../components/dashboard/Notice\";\nimport axios from \"../../store/axios\";\n\nfunction NotificationsPage() {\n  const [date, setdate] = useState(\"\");\n  const [title, settitle] = useState(\"\");\n  const [notices, setnotices] = useState([]);\n  const [storeData, setstoreData] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/notification\").then((res) => {\n      setnotices(res.data);\n      setstoreData(res.data);\n    });\n  }, []);\n\n  const inputFields = [\n    {\n      type: \"text\",\n      value: title,\n      label: \"Search by name\",\n      name: \"title\",\n      onChange: settitle,\n    },\n    {\n      type: \"date\",\n      label: \"Search by date\",\n      value: date,\n      name: \"date\",\n      onChange: setdate,\n    },\n  ];\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setnotices(storeData);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (title || date) {\n      let newNotices = storeData.filter(\n        (i) =>\n          i.title.toLowerCase().includes(title.toLowerCase()) ||\n          i.description.toLowerCase().includes(title.toLowerCase()) ||\n          new Date(i.createdAt).toISOString().slice(0, 10) === date\n      );\n      setnotices(newNotices);\n    } else {\n      setnotices(storeData);\n    }\n  };\n\n  return (\n    <div className=\" notices\">\n      <div className=\"mb-5 content__container\">\n        <h3>Notice Board</h3>\n        <Search\n          inputFields={inputFields}\n          handleReset={handleReset}\n          handleSearch={handleSearch}\n        />\n      </div>\n      <div className=\"notices__container content__container\">\n        {notices.length > 0 ? (\n          notices.map((notice) => (\n            <div className=\"\" key={notice._id}>\n              <Notice\n                description={notice.description}\n                date={notice.date}\n                title={notice.title}\n                id={notice._id}\n                isReset={true}\n                createdAt={notice?.createdAt}\n                createdBy={notice.createdBy}\n              />\n              <hr />\n            </div>\n          ))\n        ) : (\n          <>\n            <h6 className=\"text-danger text-center\">There are no notice</h6>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default NotificationsPage;\n","import React from \"react\";\n\nfunction Search(props) {\n  let {\n    inputFields,\n    title,\n    handleSearch,\n    isReset,\n    handleReset,\n    noActions,\n  } = props;\n\n  return (\n    <form className=\"mb-5 content__container\">\n      <h3 className=\"mb-3\">{title || \"\"}</h3>\n      <div className=\"row g-3 mb-3\">\n        {inputFields &&\n          inputFields.map((input) => {\n            return (\n              <div key={input?.name} className=\"col-xs-12 col-sm-6 col-md-4\">\n                <label htmlFor=\"\">{input.label}</label>\n                {input.type === \"select\" ? (\n                  <select\n                    value={input?.value}\n                    name={input?.name}\n                    onChange={(e) => input?.onChange(e.target.value)}\n                    className=\"form-select form-select-sm py-2\"\n                  >\n                    <option hidden defaultValue>\n                      Select\n                    </option>\n                    {input?.options.length > 0 ? (\n                      input?.options.map((option) => (\n                        <option key={option.id} value={option.id}>\n                          {option.name}\n                        </option>\n                      ))\n                    ) : (\n                      <option disabled>No data </option>\n                    )}\n                  </select>\n                ) : (\n                  <input\n                    type={input.type}\n                    value={input.value}\n                    name={input?.name}\n                    className=\"form-control py-3\"\n                    placeholder={`Search by ${input.name}`}\n                    onChange={(e) => input?.onChange(e.target.value)}\n                  />\n                )}\n              </div>\n            );\n          })}\n        {!noActions && (\n          <div className=\"col-xs-12 col-sm-6 col-md-4 d-flex mt-5\">\n            <div className=\"mb-3\">\n              <button className=\"btn orange__btn \" onClick={handleSearch}>\n                Search\n              </button>\n            </div>\n            {!isReset && (\n              <div className=\" mb-3 ml-3\">\n                <button onClick={handleReset} className=\"btn blue__btn \">\n                  Reset\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </form>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function CustomizedDialogs({\n  open,\n  setOpen,\n  handleDelete,\n  editData,\n}) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit Notice\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <form className=\"row\" action=\"\">\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Title</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.title}\n                onChange={(e) => editData?.settitle(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"title\"\n              />\n              {errors.title && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Date</label>\n              <input\n                type=\"date\"\n                value={moment(editData?.date).format(\"YYYY-MM-D\")}\n                ref={register({ required: true })}\n                onChange={(e) => editData?.setdate(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"date\"\n              />\n              {errors.date && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <label className=\"form-label\">Description</label>\n              <textarea\n                value={editData?.description}\n                onChange={(e) => editData?.setdescription(e.target.value)}\n                rows={5}\n                className=\"form-control\"\n                name=\"description\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Created By</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.createdby}\n                onChange={(e) => editData?.setcreatedby(e.target.value)}\n                className=\"form-control  py-4\"\n                name=\"createdby\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <button\n                  disabled={editData?.loading}\n                  onClick={handleSubmit(editData?.handleCreate)}\n                  className=\"btn blue__btn\"\n                >\n                  Save Changes\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={handleDelete} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport Edit from \"./EditNotice\";\n\nfunction Notice({\n  description,\n  createdBy,\n  date,\n  title,\n  createdAt,\n  isEdit,\n  id,\n  open,\n  setOpen,\n  editData,\n  handleDelete,\n}) {\n  const colors = [\"#2ad7c5\", \"#ffa201\", \"#f939a1\"];\n\n  const handleOpenEdit = () => {\n    setOpen(true);\n    editData?.setdate(date);\n    editData?.settitle(title);\n    editData?.setcreatedby(createdBy);\n    editData?.setdescription(description);\n    editData?.seteditID(id);\n  };\n\n  let bgColor = colors[Math.floor(Math.random() * colors.length)];\n\n  return (\n    <div className=\"notice d-flex justify-content-between align-items-center\">\n      <div>\n        <h4>\n          <strong>{title}</strong>\n        </h4>\n        <Chip\n          style={{ backgroundColor: `${bgColor}` }}\n          className=\"chip__date mb-2\"\n          label={moment(date).format(\" Do MMMM, YYYY\")}\n        />\n        <p>\n          <strong> {description} </strong>\n        </p>\n        <div>\n          <h6>\n            {createdBy} /{\" \"}\n            <span className=\"text-muted\"> {moment(createdAt).fromNow()}</span>\n          </h6>\n        </div>\n      </div>\n      {isEdit && (\n        <>\n          <div>\n            <IconButton onClick={() => handleOpenEdit()}>\n              <OpenInNewIcon />\n            </IconButton>\n          </div>\n          <Edit\n            editData={editData}\n            open={open}\n            handleDelete={handleDelete}\n            setOpen={setOpen}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Notice;\n"],"sourceRoot":""}