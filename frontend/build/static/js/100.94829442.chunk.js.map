{"version":3,"sources":["AdminComponents/Profile/academicsReports/EnrollmentStatics.js","components/tables/ExcelExport.js"],"names":["EnrollmentStatics","school","setschool","useState","data","setdata","campuses","useSelector","selectCampuses","useEffect","axios","get","then","res","async","students","map","e","_campuses$find","classStudents","filter","i","classID","classCode","female","gender","length","male","total","unspecified","campus","find","_id","campusID","name","getData","_jsxs","_Fragment","children","className","id","_jsx","fullName","motto","scope","reduce","v","onClick","handlePrint","window","print","Excel","columns","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","ExcelExport","_ref","btn","element","col","label","value"],"mappings":"iIAAA,2DAmHeA,UA5Gf,WACE,MAAOC,EAAQC,GAAaC,mBAAS,CAAC,IAC/BC,EAAMC,GAAWF,mBAAS,IAC3BG,EAAWC,YAAYC,KAiD7B,OA/CAC,qBAAU,KACRC,IAAMC,IAAI,WAAWC,MAAMC,IACzBX,EAAUW,EAAIT,KAAK,GACnB,GACD,IAEHK,qBAAU,KACQK,WACd,IAAIC,cAAwBL,IAAMC,IAAI,cAAcP,KACpDM,IAAMC,IAAI,YAAYC,MAAMC,IAC1BR,EACEQ,EAAIT,KAAKY,KAAKC,IAAO,IAADC,EAClB,IAAIC,EAAgBJ,EAASK,QAC1BC,GAAMA,EAAEC,UAAYL,EAAEM,YAErBC,EAASL,EAAcC,QAAQC,GAAmB,WAAbA,EAAEI,SACxCC,OACCC,EAAOR,EAAcC,QAAQC,GAAmB,SAAbA,EAAEI,SAAmBC,OAC5D,MAAO,IACFT,EACHO,SACAG,OACAC,MAAOT,EAAcO,OACrBG,YAAaV,EAAcO,QAAUC,EAAOH,GAC5CM,OAAkD,QAA5CZ,EAAEZ,EAASyB,MAAMV,GAAMA,EAAEW,MAAQf,EAAEgB,kBAAS,IAAAf,OAAA,EAA1CA,EAA4CgB,KACrD,IAEJ,GACD,EAGJC,EAAS,GACR,CAAC7B,IAgBF8B,eAAAC,WAAA,CAAAC,SAAA,CACEF,eAAA,OAAKG,UAAU,qBAAqBC,GAAG,mBAAkBF,SAAA,CACvDF,eAAA,OAAKG,UAAU,cAAaD,SAAA,CAE1BG,cAAA,MAAAH,SACEG,cAAA,UAAAH,SAAe,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQyC,aAEnBD,cAAA,MAAAH,SAAW,OAANrC,QAAM,IAANA,OAAM,EAANA,EAAQ0C,QAEbF,cAAA,MAAIF,UAAU,OAAMD,SAAC,6BAEvBF,eAAA,SAAOG,UAAU,QAAOD,SAAA,CACtBG,cAAA,SAAAH,SACEF,eAAA,MAAAE,SAAA,CACEG,cAAA,MAAIG,MAAM,MAAKN,SAAC,iBAChBG,cAAA,MAAIG,MAAM,MAAKN,SAAC,qBAChBG,cAAA,MAAIG,MAAM,MAAKN,SAAC,SAChBG,cAAA,MAAIG,MAAM,MAAKN,SAAC,WAChBG,cAAA,MAAIG,MAAM,MAAKN,SAAC,gBAChBG,cAAA,MAAIG,MAAM,MAAKN,SAAC,eAGpBF,eAAA,SAAAE,SAAA,CACGlC,GACCA,EAAKY,KAAKC,GACRmB,eAAA,MAAAE,SAAA,CACEG,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGiB,OACRO,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGa,SACRW,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGU,OACRc,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGO,SACRiB,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGY,cACRY,cAAA,MAAAH,SAAM,OAADrB,QAAC,IAADA,OAAC,EAADA,EAAGW,UANDX,EAAEe,OASfI,eAAA,MAAAE,SAAA,CACEG,cAAA,MAAAH,SAAI,UACJG,cAAA,SACAA,cAAA,MAAAH,SAAKlC,EAAKyC,QAAO,CAACC,EAAGzB,IAAMyB,EAAIzB,EAAEM,MAAM,KACvCc,cAAA,MAAAH,SAAKlC,EAAKyC,QAAO,CAACC,EAAGzB,IAAMyB,EAAIzB,EAAEG,QAAQ,KACzCiB,cAAA,MAAAH,SAAKlC,EAAKyC,QAAO,CAACC,EAAGzB,IAAMyB,EAAIzB,EAAEQ,aAAa,KAC9CY,cAAA,MAAAH,SAAKlC,EAAKyC,QAAO,CAACC,EAAGzB,IAAMyB,EAAIzB,EAAEO,OAAO,iBAKhDQ,eAAA,OAAKG,UAAU,mBAAkBD,SAAA,CAC/BG,cAAA,UAAQM,QA5DMC,KAClBC,OAAOC,OAAO,EA2DoBX,UAAU,qBAAoBD,SAAC,UAG7DG,cAACU,IAAK,CAAC/C,KAAMA,EAAMgD,QA3DT,CACd,CAAEZ,GAAI,OAAQN,KAAM,SACpB,CAAEM,GAAI,SAAUN,KAAM,UACtB,CAAEM,GAAI,OAAQN,KAAM,QACpB,CAAEM,GAAI,SAAUN,KAAM,UACtB,CAAEM,GAAI,cAAeN,KAAM,eAC3B,CAAEM,GAAI,QAASN,KAAM,iBAyDzB,C,mCCjHA,4CAIA,MAAMmB,EAAYC,IAAYD,UACxBE,EAAaD,IAAYD,UAAUE,WACnCC,EAAcF,IAAYD,UAAUG,YAgB3BC,IAdf,SAAoBC,GAAgC,IAA/B,KAAEtD,EAAI,IAAEuD,EAAG,KAAEzB,EAAI,QAAEkB,GAASM,EAC/C,OACEjB,cAACY,EAAS,CACRO,QAASnB,cAAA,UAAQF,UAAU,gBAAeD,SAAEqB,GAAO,aAAqBrB,SAExEG,cAACc,EAAU,CAACnD,KAAMA,EAAM8B,KAAMA,GAAQ,OAAOI,SAC1Cc,EAAQpC,KAAK6C,GACZpB,cAACe,EAAW,CAAcM,MAAOD,EAAI3B,KAAM6B,MAAOF,EAAIrB,IAApCqB,EAAIrB,SAKhC,C","file":"static/js/100.94829442.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"../../../store/axios\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectCampuses } from \"../../../store/slices/schoolSlice\";\nimport Excel from \"../../../components/tables/ExcelExport\";\n\nfunction EnrollmentStatics() {\n  const [school, setschool] = useState({});\n  const [data, setdata] = useState([]);\n  const campuses = useSelector(selectCampuses);\n\n  useEffect(() => {\n    axios.get(\"/school\").then((res) => {\n      setschool(res.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    const getData = async () => {\n      let students = await (await axios.get(\"/students\")).data;\n      axios.get(`/classes`).then((res) => {\n        setdata(\n          res.data.map((e) => {\n            let classStudents = students.filter(\n              (i) => i.classID === e.classCode\n            );\n            let female = classStudents.filter((i) => i.gender === \"female\")\n              .length;\n            let male = classStudents.filter((i) => i.gender === \"male\").length;\n            return {\n              ...e,\n              female,\n              male,\n              total: classStudents.length,\n              unspecified: classStudents.length - (male + female),\n              campus: campuses.find((i) => i._id === e.campusID)?.name,\n            };\n          })\n        );\n      });\n    };\n\n    getData();\n  }, [campuses]);\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const columns = [\n    { id: \"name\", name: \"Class\" },\n    { id: \"campus\", name: \"Campus\" },\n    { id: \"male\", name: \"Male\" },\n    { id: \"female\", name: \"Female\" },\n    { id: \"unspecified\", name: \"Unspecified\" },\n    { id: \"total\", name: \"Total\" },\n  ];\n\n  return (\n    <>\n      <div className=\"content__container\" id=\"section-to-print\">\n        <div className=\"text-center\">\n          {/* <img width=\"100px\" src={getImgSrc(school?.profileUrl)} alt=\"\" /> */}\n          <h5>\n            <strong>{school?.fullName}</strong>\n          </h5>\n          <h6>{school?.motto}</h6>\n\n          <h5 className=\"my-4\">ENROLLMENT STATISTICS</h5>\n        </div>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Class/ Group</th>\n              <th scope=\"col\">Campus / Section</th>\n              <th scope=\"col\">Male</th>\n              <th scope=\"col\">Female</th>\n              <th scope=\"col\">UnSpecified</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data &&\n              data.map((e) => (\n                <tr key={e._id}>\n                  <td>{e?.name}</td>\n                  <td>{e?.campus}</td>\n                  <td>{e?.male}</td>\n                  <td>{e?.female}</td>\n                  <td>{e?.unspecified}</td>\n                  <td>{e?.total}</td>\n                </tr>\n              ))}\n            <tr>\n              <th>Total</th>\n              <td></td>\n              <td>{data.reduce((v, i) => v + i.male, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.female, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.unspecified, 0)}</td>\n              <td>{data.reduce((v, i) => v + i.total, 0)}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div className=\"my-3 text-center\">\n        <button onClick={handlePrint} className=\"btn blue__btn mr-2\">\n          Print\n        </button>\n        <Excel data={data} columns={columns} />\n      </div>\n    </>\n  );\n}\n\nexport default EnrollmentStatics;\n","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport moment from \"moment\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction ExcelExport({ data, btn, name, columns }) {\n  return (\n    <ExcelFile\n      element={<button className=\"btn blue__btn\">{btn || \"Download\"}</button>}\n    >\n      <ExcelSheet data={data} name={name || \"data\"}>\n        {columns.map((col) => (\n          <ExcelColumn key={col.id} label={col.name} value={col.id} />\n        ))}\n      </ExcelSheet>\n    </ExcelFile>\n  );\n}\n\nexport default ExcelExport;\n"],"sourceRoot":""}