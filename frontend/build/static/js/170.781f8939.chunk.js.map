{"version":3,"sources":["AdminComponents/messages/StudentMessage.js","components/messages/SendToForm.js"],"names":["StudentMessage","message","setmessage","useState","recipientsOptions","setrecipientsOptions","recipient","setrecipient","search","setsearch","classes","useSelector","selectClasses","sender","selectUser","loading","setloading","_jsxs","children","className","_jsx","action","onSubmit","e","preventDefault","axios","get","concat","then","res","console","log","data","error","errorAlert","users","map","user","id","userID","name","telephone","mobilenumber","surname","value","onChange","target","type","placeholder","handleSearchbyClass","defaultValue","hidden","classCode","_id","length","SendToForm","onSend","selected","find","i","post","successAlert","catch","err","searchOptions","option","sendto","_ref","htmlFor","defaultChecked","disabled","readOnly","rows","required","onClick","role"],"mappings":"iIAAA,4EAyJeA,UAjJf,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAmBC,GAAwBF,mBAAS,KACpDG,EAAWC,GAAgBJ,mBAAS,KACpCK,EAAQC,GAAaN,mBAAS,IAC/BO,EAAUC,YAAYC,KACtBC,EAASF,YAAYG,MACpBC,EAASC,GAAcb,mBAAS,IAsFvC,OACEc,eAAA,OAAAC,SAAA,CACED,eAAA,OAAKE,UAAU,8BAA6BD,SAAA,CAC1CE,cAAA,MAAAF,SAAI,oBACJD,eAAA,QAAMI,OAAO,GAAGC,SAvDMC,IAC1BA,EAAEC,iBACFC,IAAMC,IAAI,oBAADC,OAAqBnB,IAAUoB,MAAMC,IAE5C,GADAC,QAAQC,IAAIF,EAAIG,MACZH,EAAIG,KAAKC,MAGX,OAFAH,QAAQC,IAAI,SACZG,YAAWL,EAAIG,KAAKC,OACb,EAET5B,EACEwB,EAAIG,KAAKG,MAAMC,KAAKC,IACX,CACLC,GAAID,EAAKE,OACTC,KAAMH,EAAKG,KACXC,WAAe,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,gBAAoB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMI,WACvCE,QAASN,EAAKM,YAGnB,GACD,EAoCgDxB,UAAU,gBAAeD,SAAA,CACrEE,cAAA,SAAOD,UAAU,aAAYD,SAAC,yCAG9BE,cAAA,SACEwB,MAAOpC,EACPqC,SAAWtB,GAAMd,EAAUc,EAAEuB,OAAOF,OACpCzB,UAAU,eACV4B,KAAK,OACLC,YAAY,oBAGhB/B,eAAA,OAAKE,UAAU,WAAUD,SAAA,CACvBE,cAAA,SAAOD,UAAU,aAAYD,SAAC,8BAC9BD,eAAA,UACE4B,SAAWtB,GAhDQA,KAC3BO,QAAQC,IAAIR,GACZE,IAAMC,IAAI,mBAADC,OAAoBJ,IAAKK,MAAMC,IAEtC,GADAC,QAAQC,IAAIF,EAAIG,MACZH,EAAIG,KAAKC,MAEX,OADAH,QAAQC,IAAI,SACLG,YAAWL,EAAIG,KAAKC,OAE7B5B,EACEwB,EAAIG,KAAKG,MAAMC,KAAKC,IACX,CACLC,GAAID,EAAKE,OACTC,KAAMH,EAAKG,KACXC,WAAe,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMI,aAAiB,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,cACpCC,QAASN,EAAKM,YAGnB,GACD,EA8BuBM,CAAoB1B,EAAEuB,OAAOF,OAC9CN,GAAG,aACHnB,UAAU,cAAaD,SAAA,CAEvBE,cAAA,UAAQ8B,cAAY,EAACC,QAAM,EAAAjC,SAAC,cAG3BR,EAAQ0B,KAAKb,GACZH,cAAA,UAAoBwB,MAAOrB,EAAE6B,UAAUlC,SACpCK,EAAEiB,MADQjB,EAAE8B,gBAOtBjD,EAAkBkD,OAAS,GAC1BlC,cAACmC,IAAU,CACTtD,QAASA,EACTC,WAAYA,EACZsD,OA1HQjC,IAEd,GADAA,EAAEC,iBACEvB,GAAWK,EAAW,CACxBU,GAAW,GACX,IAAIyC,EAAWrD,EAAkBsD,MAAMC,GAAMA,EAAErB,KAAOhC,IACtD,GAAa,OAARmD,QAAQ,IAARA,MAAUhB,UAEb,OADAzB,GAAW,GACJkB,YAAW,sCAEpBJ,QAAQC,IAAI0B,GACZhC,IACGmC,KAAK,SAAU,CACd3D,UACAwC,UAAmB,OAARgB,QAAQ,IAARA,OAAQ,EAARA,EAAUhB,UACrBF,OAAQjC,EACRO,OAAc,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQyB,KAEjBV,MAAMC,IAEL,GADAb,GAAW,GACPa,EAAIG,KAAKC,MAEX,OADAC,YAAWL,EAAIG,KAAKC,OACb,EAET4B,YAAa,gBACb3D,EAAW,GAAG,IAEf4D,OAAOC,IACNjC,QAAQC,IAAIgC,GACZ/C,GAAW,EAAM,GAEvB,GA6FMZ,kBAAmBA,EACnBE,UAAWA,EACXC,aAAcA,EACdM,OAAc,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQyB,GAChBvB,QAASA,EACTiD,cApDcA,IACb5D,EAAkBgC,KAAK6B,GAC5BhD,eAAA,UAAwB2B,MAAOqB,EAAO3B,GAAGpB,SAAA,CACtC+C,EAAOzB,KAAK,IAAEyB,EAAOtB,QAAQ,IAAEsB,EAAO3B,GAAI,MADhC2B,EAAO3B,MAmDhB4B,OAAO,cAKjB,C,mCCvJA,iBAoFeX,IAlFf,SAAmBY,GAWf,IAXgB,QAClBlE,EAAO,WACPC,EAAU,OACVsD,EAAM,UACNlD,EAAS,aACTC,EAAY,OACZM,EAAM,OACNqD,EAAM,cACNF,EAAa,QACbjD,EAAO,MACPkB,GACDkC,EACC,OACElD,eAAA,QAAMI,OAAO,GAAGF,UAAU,mCAAkCD,SAAA,CAC1DE,cAAA,OAAKD,UAAU,SAAQD,SACrBD,eAAA,MAAAC,SAAA,CAAI,mBAAiBgD,OAEvBjD,eAAA,OAAKE,UAAU,gBAAeD,SAAA,CAC5BE,cAAA,SAAOD,UAAU,WAAWiD,QAAQ,GAAElD,SAAC,eAGvCE,cAAA,OAAKD,UAAU,YAAWD,SACxBD,eAAA,UACE2B,MAAOtC,EACPuC,SAAWtB,GAAMhB,EAAagB,EAAEuB,OAAOF,OACvCN,GAAG,aACHnB,UAAU,cAAaD,SAAA,CAEvBE,cAAA,UAAQiD,gBAAc,EAAClB,QAAM,EAAAjC,SAAC,cAG7B8C,EACCA,IAEA5C,cAAA,UAAQkD,UAAQ,EAAApD,SAAC,uBAMzBD,eAAA,OAAKE,UAAU,gBAAeD,SAAA,CAC5BE,cAAA,SAAOD,UAAU,WAAWiD,QAAQ,GAAElD,SAAC,YAGvCE,cAAA,OAAKD,UAAU,YAAWD,SACxBE,cAAA,SAAOD,UAAU,eAAeyB,MAAO/B,EAAQkC,KAAK,OAAOwB,UAAQ,SAGvEtD,eAAA,OAAKE,UAAU,WAAUD,SAAA,CACvBE,cAAA,OAAKD,UAAU,SAAQD,SACrBE,cAAA,YACEwB,MAAO3C,EACP4C,SAAWtB,GAAMrB,EAAWqB,EAAEuB,OAAOF,OACrCzB,UAAU,eACVqB,KAAK,GACLgC,KAAK,KACLC,UAAQ,EACRzB,YAAY,gBAGff,GAASb,cAAA,OAAKD,UAAU,+BAA8BD,SAAEe,IACzDb,cAAA,OAAKD,UAAU,SAAQD,SACrBD,eAAA,UACEqD,SAAUvD,EACV2D,QAASlB,EACTrC,UAAU,sBAAqBD,SAAA,CAE9BH,GACCK,cAAA,QACED,UAAU,mCACVwD,KAAK,SACL,cAAY,SAEd,iBAOd,C","file":"static/js/170.781f8939.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport SendToForm from \"../../components/messages/SendToForm\";\nimport axios from \"../../store/axios\";\nimport { errorAlert, successAlert } from \"../../utils\";\nimport { useSelector } from \"react-redux\";\nimport { selectClasses } from \"../../store/slices/schoolSlice\";\nimport { selectUser } from \"../../store/slices/userSlice\";\n\nfunction StudentMessage() {\n  const [message, setmessage] = useState(\"\");\n  const [recipientsOptions, setrecipientsOptions] = useState([]);\n  const [recipient, setrecipient] = useState(\"\");\n  const [search, setsearch] = useState(\"\");\n  const classes = useSelector(selectClasses);\n  const sender = useSelector(selectUser);\n  const [loading, setloading] = useState(\"\");\n\n  const onSend = (e) => {\n    e.preventDefault();\n    if (message && recipient) {\n      setloading(true);\n      let selected = recipientsOptions.find((i) => i.id === recipient);\n      if (!selected?.telephone) {\n        setloading(false);\n        return errorAlert(\"Student does not have phone number\");\n      }\n      console.log(selected);\n      axios\n        .post(`/chats`, {\n          message,\n          telephone: selected?.telephone,\n          userID: recipient,\n          sender: sender?.id,\n        })\n        .then((res) => {\n          setloading(false);\n          if (res.data.error) {\n            errorAlert(res.data.error);\n            return 0;\n          }\n          successAlert(\"message send\");\n          setmessage(\"\");\n        })\n        .catch((err) => {\n          console.log(err);\n          setloading(false);\n        });\n    }\n  };\n\n  const handleSearchbyName = (e) => {\n    e.preventDefault();\n    axios.get(`/students/search/${search}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        errorAlert(res.data.error);\n        return 0;\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.mobilenumber || user?.telephone,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const handleSearchbyClass = (e) => {\n    console.log(e);\n    axios.get(`/students/class/${e}`).then((res) => {\n      console.log(res.data);\n      if (res.data.error) {\n        console.log(\"error\");\n        return errorAlert(res.data.error);\n      }\n      setrecipientsOptions(\n        res.data.users.map((user) => {\n          return {\n            id: user.userID,\n            name: user.name,\n            telephone: user?.telephone || user?.mobilenumber,\n            surname: user.surname,\n          };\n        })\n      );\n    });\n  };\n\n  const searchOptions = () => {\n    return recipientsOptions.map((option) => (\n      <option key={option.id} value={option.id}>\n        {option.name} {option.surname} {option.id}{\" \"}\n      </option>\n    ));\n  };\n\n  return (\n    <div>\n      <div className=\"mb-5 content__container row\">\n        <h3>Select Student </h3>\n        <form action=\"\" onSubmit={handleSearchbyName} className=\"mb-5 col-md-6\">\n          <label className=\"form-label\">\n            Search Student by Name or Student ID\n          </label>\n          <input\n            value={search}\n            onChange={(e) => setsearch(e.target.value)}\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"Type here...\"\n          />\n        </form>\n        <div className=\"col-md-5\">\n          <label className=\"form-label\">OR Select Student's Class</label>\n          <select\n            onChange={(e) => handleSearchbyClass(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.map((e) => (\n              <option key={e._id} value={e.classCode}>\n                {e.name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n      {recipientsOptions.length > 0 && (\n        <SendToForm\n          message={message}\n          setmessage={setmessage}\n          onSend={onSend}\n          recipientsOptions={recipientsOptions}\n          recipient={recipient}\n          setrecipient={setrecipient}\n          sender={sender?.id}\n          loading={loading}\n          searchOptions={searchOptions}\n          sendto=\"Student\"\n        />\n      )}\n    </div>\n  );\n}\n\nexport default StudentMessage;\n","import React from \"react\";\n\nfunction SendToForm({\n  message,\n  setmessage,\n  onSend,\n  recipient,\n  setrecipient,\n  sender,\n  sendto,\n  searchOptions,\n  loading,\n  error,\n}) {\n  return (\n    <form action=\"\" className=\" content__container form__sender\">\n      <div className=\"header\">\n        <h3>Send Message to {sendto}</h3>\n      </div>\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Recipient:\n        </label>\n        <div className=\"col-sm-10\">\n          <select\n            value={recipient}\n            onChange={(e) => setrecipient(e.target.value)}\n            id=\"inputState\"\n            className=\"form-select\"\n          >\n            <option defaultChecked hidden>\n              Choose...\n            </option>\n            {searchOptions ? (\n              searchOptions()\n            ) : (\n              <option disabled>No options</option>\n            )}\n          </select>\n        </div>\n      </div>\n\n      <div className=\"row mb-2 px-3\">\n        <label className=\"col-sm-2\" htmlFor=\"\">\n          Sender:\n        </label>\n        <div className=\"col-sm-10\">\n          <input className=\"form-control\" value={sender} type=\"text\" readOnly />\n        </div>\n      </div>\n      <div className=\"mb-2 row\">\n        <div className=\"col-12\">\n          <textarea\n            value={message}\n            onChange={(e) => setmessage(e.target.value)}\n            className=\"form-control\"\n            name=\"\"\n            rows=\"10\"\n            required\n            placeholder=\"Type here\"\n          ></textarea>\n        </div>\n        {error && <div className=\"text-danger text-center mb-2\">{error}</div>}\n        <div className=\"col-12\">\n          <button\n            disabled={loading}\n            onClick={onSend}\n            className=\"btn blue__btn w-100\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Send\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default SendToForm;\n"],"sourceRoot":""}