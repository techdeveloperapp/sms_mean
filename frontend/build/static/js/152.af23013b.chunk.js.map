{"version":3,"sources":["AdminComponents/academics/sba/SbaTable.js","AdminComponents/academics/sba/EditModal.js","AdminComponents/academics/sba/Search.js","AdminComponents/academics/sba/SetPercentageModel.js","AdminComponents/academics/sba/SBA.js"],"names":["useStyles","makeStyles","table","width","SbaTable","_ref","rows","handleEdit","examMark","classWorkPercentage","examPercentage","setexamMark","classworkMark","setclassworkMark","handleOpenPercentage","classes","getGrade","classwork","exam","num","getTotal","getInterpretation","Number","getClassWorkPercentage","mark","per","work","dec","toFixed","getexamPercentage","exams","decclass","decexam","_jsxs","children","_jsx","className","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","colSpan","name","type","onChange","e","target","value","onClick","Edit","TableBody","length","_Fragment","map","row","userID","readOnly","classWork","total","position","EditIcon","theme","appBar","title","marginLeft","spacing","flex","Transition","React","forwardRef","props","ref","Slide","direction","FullScreenDialog","open","setOpen","setexam","setclassWork","onSubmit","classID","loading","setposition","register","handleSubmit","errors","useForm","handleClose","Dialog","fullScreen","onClose","TransitionComponent","AppBar","color","Toolbar","Typography","variant","IconButton","edge","CloseIcon","action","min","max","a1","disabled","class","role","Search","setclass","term","setterm","academicYear","setacademicYear","course","setcourse","handleSearch","useSelector","selectClasses","yearGroup","selectYearGroup","courses","setcourses","useState","htmlFor","async","axios","get","concat","then","res","data","docs","i","code","handleSelectClass","defaultValue","hidden","classCode","_id","year","setexamPercentage","setclassWorkPercentage","console","log","SBA","setdata","students","setstudents","classWorkMark","setclassWorkMark","openEdit","setopenEdit","setclassID","setyear","isSet","setisSet","selectedUser","setselectedUser","loadingClass","setloadingClass","loadingSubmit","setloadingSubmit","openPercentage","setopenPercentage","newexamPercentage","setnewexamPercentage","newclassWorkPercentage","setnewclassWorkPercentage","ex","cla","exammark","classmark","preventDefault","errorAlert","_res$data$docs","_res$data$docs2","sba","result","sortedStudents","sort","a","b","SBATable","put","id","selectedStudent","find","newData","newStudents","SetPercentage","handleSubmitPercentage"],"mappings":"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","file":"static/js/152.af23013b.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/BorderColor\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nconst useStyles = makeStyles({\n  table: {\n    width: \"100%\",\n  },\n});\n\nfunction SbaTable({\n  rows,\n  handleEdit,\n  examMark,\n  classWorkPercentage,\n  examPercentage,\n  setexamMark,\n  classworkMark,\n  setclassworkMark,\n  handleOpenPercentage,\n}) {\n  const classes = useStyles();\n  const getGrade = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    if (num >= 75 && num <= 100) {\n      return \"A1\";\n    } else if (num >= 70 && num <= 74) {\n      return \"B2\";\n    } else if (num >= 65 && num <= 69) {\n      return \"B3\";\n    } else if (num >= 60 && num <= 64) {\n      return \"C4\";\n    } else if (num >= 55 && num <= 59) {\n      return \"C5\";\n    } else if (num >= 50 && num <= 54) {\n      return \"C6\";\n    } else if (num >= 45 && num <= 49) {\n      return \"D7\";\n    } else if (num >= 40 && num <= 44) {\n      return \"E8\";\n    } else if (num >= 0 && num <= 39) {\n      return \"F9\";\n    } else {\n      return null;\n    }\n  };\n\n  const getInterpretation = (classwork, exam) => {\n    if (!classwork && !exam) {\n      return \"-\";\n    }\n    let num = getTotal(classwork, exam);\n    num = Number(num);\n    if (num > 75 && num <= 100) {\n      return \"Excellent\";\n    } else if (num >= 70 && num <= 74) {\n      return \"Vert good\";\n    } else if (num >= 65 && num <= 69) {\n      return \"Good\";\n    } else if (num >= 60 && num <= 64) {\n      return \"Credit\";\n    } else if (num >= 55 && num <= 59) {\n      return \"Credit\";\n    } else if (num >= 50 && num <= 54) {\n      return \"Credit\";\n    } else if (num >= 45 && num <= 49) {\n      return \"Pass\";\n    } else if (num >= 40 && num <= 44) {\n      return \"Pass\";\n    } else if (num >= 0 && num <= 39) {\n      return \"Failure\";\n    } else {\n      return null;\n    }\n  };\n\n  const getClassWorkPercentage = (mark, per, work) => {\n    if (mark && per && work) {\n      let dec = (Number(mark) / Number(work)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = (mark, per, exam) => {\n    if (mark && per && exam) {\n      let dec = (Number(mark) / Number(exam)) * (Number(per) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (classwork, exams) => {\n    if (!classwork && !exams) {\n      return \"-\";\n    }\n    let decclass =\n      (Number(classwork) / Number(classworkMark || 0)) *\n      (Number(classWorkPercentage || 0) / 100);\n    let decexam =\n      (Number(exams) / Number(examMark)) * (Number(examPercentage || 0) / 100);\n\n    let total = (Number(decexam + decclass) * 100).toFixed(0);\n    return total;\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-5\">Continuous Assessment</h3>\n      <TableContainer className=\"mb-5\" component={Paper}>\n        <Table className={classes.table} aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">ID</TableCell>\n              <TableCell align=\"left\" colSpan={3}>\n                Name of Student\n              </TableCell>\n              <TableCell align=\"left\">\n                Class Work\n                <input\n                  className=\"form-control\"\n                  name=\"classworkMark\"\n                  type=\"number\"\n                  onChange={(e) => setclassworkMark(e.target.value)}\n                  value={classworkMark}\n                ></input>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                Class Work ({classWorkPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam\n                <input\n                  className=\"form-control\"\n                  type=\"number\"\n                  onChange={(e) => setexamMark(e.target.value)}\n                  value={examMark}\n                ></input>{\" \"}\n              </TableCell>\n              <TableCell align=\"left\">\n                Exam ({examPercentage}%)\n                <button onClick={() => handleOpenPercentage()} className=\"btn\">\n                  Set <Edit />\n                </button>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Total 100%</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Grade</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                {\" \"}\n                <small>Interpretation</small>\n              </TableCell>\n              <TableCell align=\"left\">\n                <small>Position</small>\n              </TableCell>\n\n              <TableCell align=\"left\">\n                <small>Set</small>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {rows?.length > 0 ? (\n              <>\n                {rows?.map((row) => (\n                  <TableRow key={row?.userID}>\n                    <TableCell>{row?.userID}</TableCell>\n                    <TableCell colSpan={3} align=\"left\">\n                      {row?.name}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.classWork || \"-\"}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getClassWorkPercentage(\n                          row?.classWork,\n                          classWorkPercentage,\n                          classworkMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={row?.exam}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <input\n                        readOnly\n                        value={getexamPercentage(\n                          row?.exam,\n                          examPercentage,\n                          examMark\n                        )}\n                        type=\"text\"\n                        className=\"form-control\"\n                      />\n                    </TableCell>\n\n                    <TableCell align=\"left\">\n                      {/* <small> {getTotal(row?.classWork, row?.exam)}</small> */}\n                      <small> {row?.total}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small> {getGrade(row?.classWork, row?.exam)}</small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <small>\n                        {\" \"}\n                        {getInterpretation(row?.classWork, row?.exam)}\n                      </small>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      {\" \"}\n                      <small>{row?.position}</small>{\" \"}\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <button\n                        onClick={() => handleEdit(row?.userID)}\n                        className=\"btn btn-sm\"\n                      >\n                        <EditIcon />\n                      </button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </>\n            ) : (\n              <TableCell colSpan={10}>\n                <strong>There are no students in this class</strong>{\" \"}\n              </TableCell>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\nexport default SbaTable;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  name,\n  userID,\n  exam,\n  setexam,\n  classWork,\n  setclassWork,\n  onSubmit,\n  classID,\n  loading,\n  position,\n  setposition,\n  classworkMark,\n  examMark,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n  const handleClose = () => {\n    setposition(\"\");\n    setclassWork(\"\");\n    setexam(\"\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            {name} - {userID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <h3 className=\"mb-5\">Set Grades for Class {classID} </h3>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">\n            Set ClassWork ( out of {Number(classworkMark || 0)})\n          </label>\n          <input\n            value={classWork}\n            ref={register({ min: 0, max: Number(classworkMark || 0) + 1 })}\n            onChange={(e) => setclassWork(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n          {errors.a1 && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(classworkMark || 0)}\n            </span>\n          )}\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">\n            Exam Mark (out of {Number(examMark || 0)})\n          </label>\n          <input\n            value={exam}\n            ref={register({ min: 0, max: Number(examMark || 0) + 1 })}\n            onChange={(e) => setexam(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n          {errors.exams && (\n            <span className=\" form-error text-danger mb-2\">\n              out of ({Number(examMark || 0)}\n            </span>\n          )}\n        </div>\n        {/* <div className=\"mb-5\">\n          <label className=\"form-label\">Position</label>\n          <input\n            value={position}\n            onChange={(e) => setposition(e.target.value)}\n            type=\"number\"\n            ref={register({ min: 0 })}\n            className=\"form-control col-6\"\n            name=\"position\"\n          />\n          {errors.position && (\n            <span className=\" form-error text-danger mb-2\">\n              cannot be negative\n            </span>\n          )}\n        </div> */}\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Submit Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  selectYearGroup,\n  selectClasses,\n  selectCourses,\n} from \"../../../store/slices/schoolSlice\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"../../../store/axios\";\n\nfunction Search({\n  classID,\n  setclass,\n  loading,\n  term,\n  setterm,\n  academicYear,\n  setacademicYear,\n  course,\n  setcourse,\n  handleSearch,\n}) {\n  const classes = useSelector(selectClasses);\n  //const courses = useSelector(selectCourses);\n  const yearGroup = useSelector(selectYearGroup);\n  const [courses, setcourses] = useState();\n\n  const handleSelectClass = async (e) => {\n    setclass(e);\n    setcourse(\"\");\n    await axios.get(`courses/class/${e}`).then((res) => {\n      setcourses(\n        res.data.docs.map((i) => {\n          return {\n            code: i.code,\n            name: i.name,\n          };\n        })\n      );\n    });\n  };\n\n  return (\n    <form className=\"content__container col-8 mb-5\">\n      <h6>Search Class</h6>\n      <div className=\"mb-3\">\n        <label htmlFor=\"name\" className=\"col-form-label\">\n          Class\n        </label>\n        <div className=\"\">\n          <select\n            name=\"academic-calendar\"\n            className=\"form-select\"\n            value={classID}\n            onChange={(e) => handleSelectClass(e.target.value)}\n          >\n            <option defaultValue hidden>\n              Choose...\n            </option>\n            {classes.length > 0 ? (\n              classes.map((e) => (\n                <option key={e._id} value={e.classCode}>\n                  {e.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No classes yet</option>\n            )}\n          </select>\n        </div>\n      </div>\n      {classID && (\n        <>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Course\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={course}\n                onChange={(e) => setcourse(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {courses?.length > 0 ? (\n                  courses.map((e) => (\n                    <option key={e._id} value={e.code}>\n                      {e.name}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No courses yet for this class</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Academic Year\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={academicYear}\n                onChange={(e) => setacademicYear(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                {yearGroup.length > 0 ? (\n                  yearGroup.map((e) => (\n                    <option key={e._id} value={e.year}>\n                      {e.year}\n                    </option>\n                  ))\n                ) : (\n                  <option disabled>No data</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"name\" className=\"col-form-label\">\n              Term\n            </label>\n            <div className=\"\">\n              <select\n                name=\"academic-calendar\"\n                className=\"form-select\"\n                value={term}\n                onChange={(e) => setterm(e.target.value)}\n              >\n                <option defaultValue hidden>\n                  Choose...\n                </option>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n              </select>\n            </div>\n          </div>\n        </>\n      )}\n      <div className=\"\">\n        <div>\n          <button\n            onClick={handleSearch}\n            disabled={loading || !classID}\n            type=\"submit\"\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            {\"Search\"}\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useForm } from \"react-hook-form\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  open,\n  setOpen,\n  examPercentage,\n  setexamPercentage,\n  classWorkPercentage,\n  setclassWorkPercentage,\n  onSubmit,\n  classID,\n  loading,\n}) {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  const handleClose = () => {\n    console.log(\"ndhou\");\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      fullScreen\n      open={open}\n      onClose={handleClose}\n      TransitionComponent={Transition}\n    >\n      <AppBar color=\"transparent\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Set Percentages for Class {classID}\n          </Typography>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={handleClose}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <form action=\"\" className=\"m-5\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Set ClassWork %</label>\n          <input\n            value={classWorkPercentage}\n            ref={register({ min: 0, max: 100 })}\n            onChange={(e) => setclassWorkPercentage(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-sm-6\"\n            name=\"a1\"\n          />\n        </div>\n        <div className=\"mb-5\">\n          <label className=\"form-label\">Exam %</label>\n          <input\n            value={examPercentage}\n            ref={register({ min: 0, max: 100 })}\n            onChange={(e) => setexamPercentage(e.target.value)}\n            type=\"number\"\n            className=\"form-control col-6\"\n            name=\"exams\"\n          />\n        </div>\n        <div className=\"mb-3\">\n          <button\n            disabled={loading}\n            onClick={handleSubmit(onSubmit)}\n            className=\"btn blue__btn\"\n          >\n            {loading && (\n              <span\n                class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n            )}\n            Save Changes\n          </button>\n        </div>\n      </form>\n    </Dialog>\n  );\n}\n","import React, { useState } from \"react\";\nimport Search from \"./Search\";\nimport SBATable from \"./SbaTable\";\nimport axios from \"../../../store/axios\";\nimport { errorAlert } from \"../../../utils\";\nimport Edit from \"./EditModal\";\nimport SetPercentage from \"./SetPercentageModel\";\n\nfunction SBA() {\n  const [data, setdata] = useState([]);\n  const [students, setstudents] = useState([]);\n  const [examMark, setexamMark] = useState(\"\");\n  const [classWorkMark, setclassWorkMark] = useState(\"\");\n  const [exam, setexam] = useState(\"\");\n  const [classWork, setclassWork] = useState(\"\");\n  const [position, setposition] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n  const [term, setterm] = useState(\"\");\n  const [classID, setclassID] = useState(\"\");\n  const [course, setcourse] = useState(\"\");\n  const [year, setyear] = useState(\"\");\n  const [isSet, setisSet] = useState(false);\n  const [selectedUser, setselectedUser] = useState({});\n  const [loadingClass, setloadingClass] = useState(false);\n  const [loadingSubmit, setloadingSubmit] = useState(false);\n  const [examPercentage, setexamPercentage] = useState(\"\");\n  const [openPercentage, setopenPercentage] = useState(false);\n  const [classWorkPercentage, setclassWorkPercentage] = useState(\"\");\n\n  //setpercentage\n  const [newexamPercentage, setnewexamPercentage] = useState(\"\");\n  const [newclassWorkPercentage, setnewclassWorkPercentage] = useState(\"\");\n\n  const handleSearch = async (e) => {\n    setisSet(false);\n    setstudents([]);\n    setexamMark(\"\");\n    setposition(\"\");\n    setclassWorkMark(\"\");\n    e.preventDefault();\n    if (classID === \"\" || term === \"\" || course === \"\" || year === \"\") {\n      return errorAlert(\"Please select all fields\");\n    }\n    setloadingClass(true);\n    await axios.get(`/classes/classCode/${classID}`).then(async (res) => {\n      if (!res.data.docs?.sba || res.data.docs?.sba === false) {\n        setloadingClass(false);\n        return errorAlert(\"SBA not set for this class\");\n      }\n      setisSet(true);\n      await axios\n        .get(`/sba/${classID}/${course}/${year}/${term}`)\n        .then((result) => {\n          setloadingClass(false);\n          let data = result.data.docs;\n          setdata(data);\n          setclassWorkMark(data?.classWork);\n          setexamMark(data?.exam);\n          setexamPercentage(data?.examPercentage);\n          setclassWorkPercentage(data?.classWorkPercentage);\n          let sortedStudents = data?.students.sort((a, b) => {\n            return Number(b?.total || 0) - Number(a?.total || 0);\n          });\n          //setstudents(data?.students);\n          setstudents(sortedStudents);\n        });\n    });\n  };\n\n  const calculatePositions = (arr) => {\n    let sortedStudents = arr.sort((a, b) => {\n      return Number(b?.total || 0) - Number(a?.total || 0);\n    });\n\n    let results = sortedStudents.map((e, i) => {\n      return {\n        ...e,\n        position: i + 1,\n      };\n    });\n    return results;\n  };\n\n  const handleEdit = (id) => {\n    if (!classWorkMark) {\n      return errorAlert(\"Please set  classWork %\");\n    }\n    if (!examMark) {\n      return errorAlert(\"Please set  exam score %\");\n    }\n    setopenEdit(true);\n    let selectedStudent = data.students.find((e) => e.userID === id);\n    setselectedUser(selectedStudent);\n    setexam(selectedStudent?.exam);\n    setclassWork(selectedStudent?.classWork);\n    setposition(selectedStudent?.position);\n  };\n\n  const getClassWorkPercentage = (mark) => {\n    if (mark) {\n      let dec =\n        (Number(mark) / Number(classWorkMark)) *\n        (Number(classWorkPercentage) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getexamPercentage = (mark) => {\n    if (mark) {\n      let dec =\n        (Number(mark) / Number(examMark)) * (Number(examPercentage) / 100);\n      return Number(dec * 100).toFixed(0);\n    }\n    return null;\n  };\n\n  const getTotal = (ex, cla) => {\n    let exammark = getexamPercentage(ex);\n    let classmark = getClassWorkPercentage(cla);\n    return Number(exammark) + Number(classmark);\n  };\n\n  const handleonSubmit = async () => {\n    setloadingSubmit(true);\n    let newData = students.map((i) =>\n      i.userID === selectedUser.userID\n        ? {\n            classWork,\n            exam,\n            classWorkPercentage: getClassWorkPercentage(classWork),\n            examPercentage: getexamPercentage(exam),\n            total: getTotal(exam, classWork),\n            userID: selectedUser?.userID,\n            name: selectedUser?.name,\n          }\n        : i\n    );\n\n    let newStudents = calculatePositions(newData);\n\n    await axios\n      .put(`/sba/update/${data?._id}`, { students: newStudents })\n      .then((res) => {\n        console.log(res.data);\n        setopenEdit(false);\n        setloadingSubmit(false);\n        setstudents(newStudents);\n      });\n  };\n\n  const handleSetclasswork = (e) => {\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        classWork: e,\n      })\n      .then(() => setclassWorkMark(e));\n  };\n\n  const handleSetclassworkPercentage = (e) => {\n    setnewexamPercentage(100 - e);\n    setnewclassWorkPercentage(e);\n  };\n\n  const handleSetexamPercentage = (e) => {\n    setnewexamPercentage(e);\n    setnewclassWorkPercentage(100 - e);\n  };\n\n  const handleSetexam = (e) => {\n    console.log(\"click\");\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        exam: e,\n      })\n      .then(() => setexamMark(e));\n  };\n\n  const handleOpenPercentage = () => {\n    setopenPercentage(true);\n    setnewclassWorkPercentage(classWorkPercentage);\n    setnewexamPercentage(examPercentage);\n  };\n\n  const handleSubmitPercentage = () => {\n    axios\n      .put(`/sba/update/${data?._id}`, {\n        examPercentage: newexamPercentage,\n        classWorkPercentage: newclassWorkPercentage,\n      })\n      .then(() => {\n        setexamPercentage(newexamPercentage);\n        setclassWorkPercentage(newclassWorkPercentage);\n        setopenPercentage(false);\n      });\n  };\n\n  return (\n    <div>\n      <h3>S.B.A</h3>\n      <div className=\"mb-3\">\n        <Search\n          academicYear={year}\n          setacademicYear={setyear}\n          setterm={setterm}\n          term={term}\n          course={course}\n          setcourse={setcourse}\n          classID={classID}\n          setclass={setclassID}\n          loading={loadingClass}\n          handleSearch={handleSearch}\n        />\n      </div>\n      {isSet && (\n        <SBATable\n          setclassWork={setclassWork}\n          rows={students}\n          examMark={examMark}\n          setexamMark={handleSetexam}\n          classworkMark={classWorkMark}\n          setclassworkMark={handleSetclasswork}\n          handleEdit={handleEdit}\n          examPercentage={examPercentage}\n          classWorkPercentage={classWorkPercentage}\n          handleOpenPercentage={handleOpenPercentage}\n        />\n      )}\n\n      <Edit\n        name={selectedUser?.name}\n        userID={selectedUser?.userID}\n        exam={exam}\n        examMark={examMark}\n        classworkMark={classWorkMark}\n        classID={classID}\n        loading={loadingSubmit}\n        setposition={setposition}\n        position={position}\n        setexam={setexam}\n        setclassWork={setclassWork}\n        classWork={classWork}\n        open={openEdit}\n        onSubmit={handleonSubmit}\n        setOpen={setopenEdit}\n      />\n      <SetPercentage\n        open={openPercentage}\n        classID={classID}\n        setOpen={setopenPercentage}\n        examPercentage={newexamPercentage}\n        setexamPercentage={handleSetexamPercentage}\n        classWorkPercentage={newclassWorkPercentage}\n        setclassWorkPercentage={handleSetclassworkPercentage}\n        onSubmit={handleSubmitPercentage}\n      />\n    </div>\n  );\n}\n\nexport default SBA;\n"],"sourceRoot":""}