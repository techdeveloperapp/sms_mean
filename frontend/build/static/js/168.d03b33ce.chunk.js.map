{"version":3,"sources":["AdminComponents/notifications/Notices.js","AdminComponents/notifications/CreatNotice.js","AdminComponents/notifications/NotificationsPage.js","components/dashboard/EditNotice.js","components/dashboard/Notice.js"],"names":["Notices","_ref","openEdit","setopenEdit","notices","searchDate","handleSearch","handleReset","setsearchDate","searchTitle","setsearchTitle","editData","handleDelete","_jsxs","className","children","_jsx","action","type","value","onChange","e","target","placeholder","onClick","length","map","Notice","description","open","isEdit","setOpen","date","id","_id","createdAt","title","createdBy","CreatNotice","setdate","settitle","handleCreate","loading","createdby","setcreatedby","setdescription","register","handleSubmit","errors","useForm","ref","required","name","rows","disabled","preventDefault","NotificationsPage","setnotices","useState","storeData","setstoreData","setcreatedBy","setloading","editTitle","seteditTitle","editDescription","seteditDescription","editDate","seteditDate","editCreatedBy","seteditCreatedBy","editloading","seteditloading","editID","seteditID","useEffect","axios","get","then","res","data","console","log","handleEditNotice","put","concat","error","errorAlert","successAlert","arr","filter","doc","catch","err","CreateNotice","post","newNotices","i","toLowerCase","includes","Date","toISOString","slice","delete","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","classes","onClose","other","MuiDialogTitle","disableTypography","Typography","variant","IconButton","CloseIcon","DialogContent","MuiDialogContent","CustomizedDialogs","handleClose","Dialog","maxWidth","fullWidth","dividers","moment","format","colors","bgColor","Math","floor","random","Chip","style","backgroundColor","label","fromNow","_Fragment","OpenInNewIcon","Edit"],"mappings":"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","file":"static/js/168.d03b33ce.chunk.js","sourcesContent":["import React from \"react\";\nimport Notice from \"../../components/dashboard/Notice\";\n\nfunction Notices({\n  openEdit,\n  setopenEdit,\n  notices,\n  searchDate,\n  handleSearch,\n  handleReset,\n  setsearchDate,\n  searchTitle,\n  setsearchTitle,\n  editData,\n  handleDelete,\n}) {\n  return (\n    <div className=\"content__container\">\n      <h3>Notice Board</h3>\n      <form action=\"\" className=\"row\">\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchDate}\n            onChange={(e) => setsearchDate(e.target.value)}\n            placeholder=\"Search by Date\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-4 mb-3\">\n          <input\n            type=\"text\"\n            value={searchTitle}\n            onChange={(e) => setsearchTitle(e.target.value)}\n            placeholder=\"Search by Title\"\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"col-sm-3 d-flex justify-content-between\">\n          <div>\n            <button onClick={handleSearch} className=\"btn blue__btn\">\n              Search\n            </button>\n          </div>\n          <div>\n            <button onClick={handleReset} className=\"btn orange__btn\">\n              Reset\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"notice__container my-5\">\n        {notices?.length > 0 ? (\n          notices?.map((e) => (\n            <div className=\"py-3\" key={e._id}>\n              <Notice\n                description={e.description}\n                open={openEdit}\n                isEdit={true}\n                setOpen={setopenEdit}\n                date={e.date}\n                id={e._id}\n                createdAt={e.createdAt}\n                title={e.title}\n                createdBy={e.createdBy}\n                editData={editData}\n                handleDelete={handleDelete}\n              />\n              <hr />\n            </div>\n          ))\n        ) : (\n          <h4>No Notice yet</h4>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Notices;\n","import React from 'react'\nimport { useForm } from \"react-hook-form\";\n\nfunction CreatNotice({\n    date, setdate, title, settitle, handleCreate,loading,\n    createdby, setcreatedby, description, setdescription}) {\n\n    const { register, handleSubmit, errors } = useForm();\n\n    const handleCancel = (e) => {\n        e.preventDefault();\n        setdate(\"\");\n        settitle(\"\");\n        setcreatedby(\"\");\n        setdescription(\"\");\n    }\n\n    return (\n        <div className=\"content__container mb-5\">\n             <h3>Create A Notice</h3>\n               <form className=\"row\" action=\"\">\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Title</label>\n                        <input \n                        type=\"text\"\n                        ref={register({ required: true})} \n                        value={title}\n                        onChange= {e => settitle(e.target.value)} \n                        className=\"form-control py-4\" \n                        name=\"title\"/>\n                         {errors.title && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Date</label>\n                        <input \n                         type=\"date\" \n                         value={date}\n                         ref={register({ required: true})} \n                         onChange={e => setdate(e.target.value)}\n                         className=\"form-control py-4\" \n                         name=\"date\"/>\n                          {errors.date && <div className=\"text-danger\">This field is required</div>}\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label className=\"form-label\">Description</label>\n                        <textarea \n                         value={description}\n                         onChange={e => setdescription(e.target.value)}\n                         rows={5}\n                         className=\"form-control\" \n                         name=\"description\"/>\n                    </div>\n                    <div className=\"col-md-6 mb-5\">\n                        <label  \n                           className=\"form-label\">\n                            Created By\n                        </label>\n                        <input \n                            type=\"text\" \n                            ref={register({ required: true})} \n                            value={createdby}\n                            onChange={e => setcreatedby(e.target.value)}\n                            className=\"form-control  py-4\" \n                            name=\"createdby\"/>\n                    </div> \n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleSubmit(handleCreate)} \n                            className=\"btn blue__btn\">\n                                Create\n                            </button>\n                        </div>\n                        <div className=\"col-2\">\n                            <button \n                            disabled={loading} \n                            onClick={handleCancel} \n                            className=\"btn btn-danger\">\n                                Cancel\n                            </button>\n                        </div>\n                    </div>    \n             </form>  \n        </div>\n    )\n}\n\nexport default CreatNotice\n","import React, { useState, useEffect } from \"react\";\nimport Notice from \"./Notices\";\nimport CreateNotice from \"./CreatNotice\";\nimport axios from \"../../store/axios\";\nimport {} from \"../../store/slices/schoolSlice\";\nimport { errorAlert, successAlert } from \"../../utils\";\n\nfunction NotificationsPage() {\n  const [notices, setnotices] = useState([]);\n  const [storeData, setstoreData] = useState([]);\n  const [title, settitle] = useState(\"\");\n  const [date, setdate] = useState(\"\");\n  const [createdBy, setcreatedBy] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [loading, setloading] = useState(\"\");\n  const [searchDate, setsearchDate] = useState(\"\");\n  const [searchTitle, setsearchTitle] = useState(\"\");\n  const [openEdit, setopenEdit] = useState(false);\n\n  //edit\n  const [editTitle, seteditTitle] = useState(\"\");\n  const [editDescription, seteditDescription] = useState(\"\");\n  const [editDate, seteditDate] = useState(\"\");\n  const [editCreatedBy, seteditCreatedBy] = useState(\"\");\n  const [editloading, seteditloading] = useState(false);\n  const [editID, seteditID] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/notification\").then((res) => {\n      setnotices(res.data);\n      console.log(res.data);\n      setstoreData(res.data);\n    });\n  }, []);\n\n  const handleEditNotice = () => {\n    seteditloading(true);\n    axios\n      .put(`/notification/update/${editID}`, {\n        title: editTitle,\n        date: editDate,\n        createdBy: editCreatedBy,\n        description: editDescription,\n      })\n      .then((res) => {\n        seteditloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice successfully edited\");\n        seteditTitle(\"\");\n        seteditDate(\"\");\n        seteditCreatedBy(\"\");\n        seteditDescription(\"\");\n        setopenEdit(false);\n        let arr = notices.filter((e) => e._id !== editID);\n        setnotices([res.data.doc, ...arr]);\n      })\n      .catch((err) => {\n        console.log(err);\n        seteditloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    axios\n      .delete(`/notification/delete/${editID}`)\n      .then((res) => {\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        setnotices(notices.filter((e) => e._id !== editID));\n        successAlert(\"Notice deleted\");\n      })\n      .catch((err) => {\n        errorAlert(\"Failed to delete\");\n      });\n  };\n\n  const handleCreate = () => {\n    setloading(true);\n    axios\n      .post(\"/notification/create\", {\n        title,\n        date,\n        createdBy,\n        description,\n      })\n      .then((res) => {\n        setloading(false);\n        if (res.data.error) {\n          errorAlert(res.data.error);\n          return 0;\n        }\n        successAlert(\"Notice created\");\n        settitle(\"\");\n        setdate(\"\");\n        setcreatedBy(\"\");\n        setdescription(\"\");\n        setnotices([res.data.doc, ...notices]);\n      })\n      .catch((err) => {\n        console.log(err);\n        setloading(false);\n        errorAlert(\"Failed to create\");\n      });\n  };\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    setsearchTitle(\"\");\n    setsearchDate(\"\");\n    setnotices(storeData);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    if (title || date) {\n      let newNotices = [];\n      if (title) {\n        newNotices = storeData.filter(\n          (i) =>\n            i.title.toLowerCase().includes(searchTitle.toLowerCase()) ||\n            i.description.toLowerCase().includes(searchTitle.toLowerCase())\n        );\n      }\n      if (date) {\n        newNotices = storeData.filter(\n          (i) => new Date(i.createdAt).toISOString().slice(0, 10) === date\n        );\n      }\n\n      setnotices(newNotices);\n    } else {\n      setnotices(storeData);\n    }\n  };\n\n  const editData = {\n    date: editDate,\n    setdate: seteditDate,\n    loading: editloading,\n    handleCreate: handleEditNotice,\n    title: editTitle,\n    settitle: seteditTitle,\n    description: editDescription,\n    setdescription: seteditDescription,\n    createdby: editCreatedBy,\n    setcreatedby: seteditCreatedBy,\n    seteditID: seteditID,\n  };\n\n  return (\n    <div>\n      <h3 className=\"mb-3\">Notice Board</h3>\n      <CreateNotice\n        date={date}\n        setdate={setdate}\n        loading={loading}\n        handleCreate={handleCreate}\n        title={title}\n        settitle={settitle}\n        description={description}\n        setdescription={setdescription}\n        createdby={createdBy}\n        setcreatedby={setcreatedBy}\n      />\n      <div id=\"notifications\">\n        <Notice\n          searchDate={searchDate}\n          openEdit={openEdit}\n          handleReset={handleReset}\n          setopenEdit={setopenEdit}\n          handleSearch={handleSearch}\n          setsearchDate={setsearchDate}\n          searchTitle={searchTitle}\n          setsearchTitle={setsearchTitle}\n          notices={notices}\n          handleDelete={handleDelete}\n          editData={editData}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NotificationsPage;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useForm } from \"react-hook-form\";\nimport moment from \"moment\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nexport default function CustomizedDialogs({\n  open,\n  setOpen,\n  handleDelete,\n  editData,\n}) {\n  const { register, handleSubmit, errors } = useForm();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        onClose={handleClose}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Edit Notice\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <form className=\"row\" action=\"\">\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Title</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.title}\n                onChange={(e) => editData?.settitle(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"title\"\n              />\n              {errors.title && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Date</label>\n              <input\n                type=\"date\"\n                value={moment(editData?.date).format(\"YYYY-MM-D\")}\n                ref={register({ required: true })}\n                onChange={(e) => editData?.setdate(e.target.value)}\n                className=\"form-control py-4\"\n                name=\"date\"\n              />\n              {errors.date && (\n                <div className=\"text-danger\">This field is required</div>\n              )}\n            </div>\n            <div className=\"col-md-12 mb-5\">\n              <label className=\"form-label\">Description</label>\n              <textarea\n                value={editData?.description}\n                onChange={(e) => editData?.setdescription(e.target.value)}\n                rows={5}\n                className=\"form-control\"\n                name=\"description\"\n              />\n            </div>\n            <div className=\"col-md-6 mb-5\">\n              <label className=\"form-label\">Created By</label>\n              <input\n                type=\"text\"\n                ref={register({ required: true })}\n                value={editData?.createdby}\n                onChange={(e) => editData?.setcreatedby(e.target.value)}\n                className=\"form-control  py-4\"\n                name=\"createdby\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-4\">\n                <button\n                  disabled={editData?.loading}\n                  onClick={handleSubmit(editData?.handleCreate)}\n                  className=\"btn blue__btn\"\n                >\n                  Save Changes\n                </button>\n              </div>\n              <div className=\"col-4\">\n                <button onClick={handleDelete} className=\"btn btn-danger\">\n                  Delete\n                </button>\n              </div>\n            </div>\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { IconButton } from \"@material-ui/core\";\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\nimport Edit from \"./EditNotice\";\n\nfunction Notice({\n  description,\n  createdBy,\n  date,\n  title,\n  createdAt,\n  isEdit,\n  id,\n  open,\n  setOpen,\n  editData,\n  handleDelete,\n}) {\n  const colors = [\"#2ad7c5\", \"#ffa201\", \"#f939a1\"];\n\n  const handleOpenEdit = () => {\n    setOpen(true);\n    editData?.setdate(date);\n    editData?.settitle(title);\n    editData?.setcreatedby(createdBy);\n    editData?.setdescription(description);\n    editData?.seteditID(id);\n  };\n\n  let bgColor = colors[Math.floor(Math.random() * colors.length)];\n\n  return (\n    <div className=\"notice d-flex justify-content-between align-items-center\">\n      <div>\n        <h4>\n          <strong>{title}</strong>\n        </h4>\n        <Chip\n          style={{ backgroundColor: `${bgColor}` }}\n          className=\"chip__date mb-2\"\n          label={moment(date).format(\" Do MMMM, YYYY\")}\n        />\n        <p>\n          <strong> {description} </strong>\n        </p>\n        <div>\n          <h6>\n            {createdBy} /{\" \"}\n            <span className=\"text-muted\"> {moment(createdAt).fromNow()}</span>\n          </h6>\n        </div>\n      </div>\n      {isEdit && (\n        <>\n          <div>\n            <IconButton onClick={() => handleOpenEdit()}>\n              <OpenInNewIcon />\n            </IconButton>\n          </div>\n          <Edit\n            editData={editData}\n            open={open}\n            handleDelete={handleDelete}\n            setOpen={setOpen}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Notice;\n"],"sourceRoot":""}